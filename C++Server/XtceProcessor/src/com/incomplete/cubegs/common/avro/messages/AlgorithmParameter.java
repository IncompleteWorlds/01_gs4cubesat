/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.incomplete.cubegs.common.avro.messages;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** It defines an input or output parameter of an Algorithm */
@org.apache.avro.specific.AvroGenerated
public class AlgorithmParameter extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3981284103156492770L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AlgorithmParameter\",\"namespace\":\"com.incomplete.cubegs.common.avro.messages\",\"doc\":\"It defines an input or output parameter of an Algorithm\",\"fields\":[{\"name\":\"algorithmName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Name of the Algorithm\"},{\"name\":\"parameterName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Name of the Parameter\"},{\"name\":\"parameterValue\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Source code of the algorithm\"},{\"name\":\"inputOutputType\",\"type\":\"int\",\"doc\":\"0 - Input, 1 - Outputparameter\"},{\"name\":\"nameInAlgorithm\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Name of the parameter in the algorithm\"},{\"name\":\"mandatoryFlag\",\"type\":\"boolean\",\"doc\":\"0 - False, 1 - True\"},{\"name\":\"subsystem\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Subsystem name\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Name of the Algorithm */
  @Deprecated public java.lang.String algorithmName;
  /** Name of the Parameter */
  @Deprecated public java.lang.String parameterName;
  /** Source code of the algorithm */
  @Deprecated public java.lang.String parameterValue;
  /** 0 - Input, 1 - Outputparameter */
  @Deprecated public int inputOutputType;
  /** Name of the parameter in the algorithm */
  @Deprecated public java.lang.String nameInAlgorithm;
  /** 0 - False, 1 - True */
  @Deprecated public boolean mandatoryFlag;
  /** Subsystem name */
  @Deprecated public java.lang.String subsystem;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AlgorithmParameter() {}

  /**
   * All-args constructor.
   * @param algorithmName Name of the Algorithm
   * @param parameterName Name of the Parameter
   * @param parameterValue Source code of the algorithm
   * @param inputOutputType 0 - Input, 1 - Outputparameter
   * @param nameInAlgorithm Name of the parameter in the algorithm
   * @param mandatoryFlag 0 - False, 1 - True
   * @param subsystem Subsystem name
   */
  public AlgorithmParameter(java.lang.String algorithmName, java.lang.String parameterName, java.lang.String parameterValue, java.lang.Integer inputOutputType, java.lang.String nameInAlgorithm, java.lang.Boolean mandatoryFlag, java.lang.String subsystem) {
    this.algorithmName = algorithmName;
    this.parameterName = parameterName;
    this.parameterValue = parameterValue;
    this.inputOutputType = inputOutputType;
    this.nameInAlgorithm = nameInAlgorithm;
    this.mandatoryFlag = mandatoryFlag;
    this.subsystem = subsystem;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return algorithmName;
    case 1: return parameterName;
    case 2: return parameterValue;
    case 3: return inputOutputType;
    case 4: return nameInAlgorithm;
    case 5: return mandatoryFlag;
    case 6: return subsystem;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: algorithmName = (java.lang.String)value$; break;
    case 1: parameterName = (java.lang.String)value$; break;
    case 2: parameterValue = (java.lang.String)value$; break;
    case 3: inputOutputType = (java.lang.Integer)value$; break;
    case 4: nameInAlgorithm = (java.lang.String)value$; break;
    case 5: mandatoryFlag = (java.lang.Boolean)value$; break;
    case 6: subsystem = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'algorithmName' field.
   * @return Name of the Algorithm
   */
  public java.lang.String getAlgorithmName() {
    return algorithmName;
  }

  /**
   * Sets the value of the 'algorithmName' field.
   * Name of the Algorithm
   * @param value the value to set.
   */
  public void setAlgorithmName(java.lang.String value) {
    this.algorithmName = value;
  }

  /**
   * Gets the value of the 'parameterName' field.
   * @return Name of the Parameter
   */
  public java.lang.String getParameterName() {
    return parameterName;
  }

  /**
   * Sets the value of the 'parameterName' field.
   * Name of the Parameter
   * @param value the value to set.
   */
  public void setParameterName(java.lang.String value) {
    this.parameterName = value;
  }

  /**
   * Gets the value of the 'parameterValue' field.
   * @return Source code of the algorithm
   */
  public java.lang.String getParameterValue() {
    return parameterValue;
  }

  /**
   * Sets the value of the 'parameterValue' field.
   * Source code of the algorithm
   * @param value the value to set.
   */
  public void setParameterValue(java.lang.String value) {
    this.parameterValue = value;
  }

  /**
   * Gets the value of the 'inputOutputType' field.
   * @return 0 - Input, 1 - Outputparameter
   */
  public java.lang.Integer getInputOutputType() {
    return inputOutputType;
  }

  /**
   * Sets the value of the 'inputOutputType' field.
   * 0 - Input, 1 - Outputparameter
   * @param value the value to set.
   */
  public void setInputOutputType(java.lang.Integer value) {
    this.inputOutputType = value;
  }

  /**
   * Gets the value of the 'nameInAlgorithm' field.
   * @return Name of the parameter in the algorithm
   */
  public java.lang.String getNameInAlgorithm() {
    return nameInAlgorithm;
  }

  /**
   * Sets the value of the 'nameInAlgorithm' field.
   * Name of the parameter in the algorithm
   * @param value the value to set.
   */
  public void setNameInAlgorithm(java.lang.String value) {
    this.nameInAlgorithm = value;
  }

  /**
   * Gets the value of the 'mandatoryFlag' field.
   * @return 0 - False, 1 - True
   */
  public java.lang.Boolean getMandatoryFlag() {
    return mandatoryFlag;
  }

  /**
   * Sets the value of the 'mandatoryFlag' field.
   * 0 - False, 1 - True
   * @param value the value to set.
   */
  public void setMandatoryFlag(java.lang.Boolean value) {
    this.mandatoryFlag = value;
  }

  /**
   * Gets the value of the 'subsystem' field.
   * @return Subsystem name
   */
  public java.lang.String getSubsystem() {
    return subsystem;
  }

  /**
   * Sets the value of the 'subsystem' field.
   * Subsystem name
   * @param value the value to set.
   */
  public void setSubsystem(java.lang.String value) {
    this.subsystem = value;
  }

  /**
   * Creates a new AlgorithmParameter RecordBuilder.
   * @return A new AlgorithmParameter RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.AlgorithmParameter.Builder newBuilder() {
    return new com.incomplete.cubegs.common.avro.messages.AlgorithmParameter.Builder();
  }

  /**
   * Creates a new AlgorithmParameter RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AlgorithmParameter RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.AlgorithmParameter.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.AlgorithmParameter.Builder other) {
    return new com.incomplete.cubegs.common.avro.messages.AlgorithmParameter.Builder(other);
  }

  /**
   * Creates a new AlgorithmParameter RecordBuilder by copying an existing AlgorithmParameter instance.
   * @param other The existing instance to copy.
   * @return A new AlgorithmParameter RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.AlgorithmParameter.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.AlgorithmParameter other) {
    return new com.incomplete.cubegs.common.avro.messages.AlgorithmParameter.Builder(other);
  }

  /**
   * RecordBuilder for AlgorithmParameter instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AlgorithmParameter>
    implements org.apache.avro.data.RecordBuilder<AlgorithmParameter> {

    /** Name of the Algorithm */
    private java.lang.String algorithmName;
    /** Name of the Parameter */
    private java.lang.String parameterName;
    /** Source code of the algorithm */
    private java.lang.String parameterValue;
    /** 0 - Input, 1 - Outputparameter */
    private int inputOutputType;
    /** Name of the parameter in the algorithm */
    private java.lang.String nameInAlgorithm;
    /** 0 - False, 1 - True */
    private boolean mandatoryFlag;
    /** Subsystem name */
    private java.lang.String subsystem;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.AlgorithmParameter.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.algorithmName)) {
        this.algorithmName = data().deepCopy(fields()[0].schema(), other.algorithmName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.parameterName)) {
        this.parameterName = data().deepCopy(fields()[1].schema(), other.parameterName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.parameterValue)) {
        this.parameterValue = data().deepCopy(fields()[2].schema(), other.parameterValue);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.inputOutputType)) {
        this.inputOutputType = data().deepCopy(fields()[3].schema(), other.inputOutputType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.nameInAlgorithm)) {
        this.nameInAlgorithm = data().deepCopy(fields()[4].schema(), other.nameInAlgorithm);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.mandatoryFlag)) {
        this.mandatoryFlag = data().deepCopy(fields()[5].schema(), other.mandatoryFlag);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.subsystem)) {
        this.subsystem = data().deepCopy(fields()[6].schema(), other.subsystem);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing AlgorithmParameter instance
     * @param other The existing instance to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.AlgorithmParameter other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.algorithmName)) {
        this.algorithmName = data().deepCopy(fields()[0].schema(), other.algorithmName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.parameterName)) {
        this.parameterName = data().deepCopy(fields()[1].schema(), other.parameterName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.parameterValue)) {
        this.parameterValue = data().deepCopy(fields()[2].schema(), other.parameterValue);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.inputOutputType)) {
        this.inputOutputType = data().deepCopy(fields()[3].schema(), other.inputOutputType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.nameInAlgorithm)) {
        this.nameInAlgorithm = data().deepCopy(fields()[4].schema(), other.nameInAlgorithm);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.mandatoryFlag)) {
        this.mandatoryFlag = data().deepCopy(fields()[5].schema(), other.mandatoryFlag);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.subsystem)) {
        this.subsystem = data().deepCopy(fields()[6].schema(), other.subsystem);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'algorithmName' field.
      * Name of the Algorithm
      * @return The value.
      */
    public java.lang.String getAlgorithmName() {
      return algorithmName;
    }

    /**
      * Sets the value of the 'algorithmName' field.
      * Name of the Algorithm
      * @param value The value of 'algorithmName'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.AlgorithmParameter.Builder setAlgorithmName(java.lang.String value) {
      validate(fields()[0], value);
      this.algorithmName = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'algorithmName' field has been set.
      * Name of the Algorithm
      * @return True if the 'algorithmName' field has been set, false otherwise.
      */
    public boolean hasAlgorithmName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'algorithmName' field.
      * Name of the Algorithm
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.AlgorithmParameter.Builder clearAlgorithmName() {
      algorithmName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'parameterName' field.
      * Name of the Parameter
      * @return The value.
      */
    public java.lang.String getParameterName() {
      return parameterName;
    }

    /**
      * Sets the value of the 'parameterName' field.
      * Name of the Parameter
      * @param value The value of 'parameterName'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.AlgorithmParameter.Builder setParameterName(java.lang.String value) {
      validate(fields()[1], value);
      this.parameterName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'parameterName' field has been set.
      * Name of the Parameter
      * @return True if the 'parameterName' field has been set, false otherwise.
      */
    public boolean hasParameterName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'parameterName' field.
      * Name of the Parameter
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.AlgorithmParameter.Builder clearParameterName() {
      parameterName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'parameterValue' field.
      * Source code of the algorithm
      * @return The value.
      */
    public java.lang.String getParameterValue() {
      return parameterValue;
    }

    /**
      * Sets the value of the 'parameterValue' field.
      * Source code of the algorithm
      * @param value The value of 'parameterValue'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.AlgorithmParameter.Builder setParameterValue(java.lang.String value) {
      validate(fields()[2], value);
      this.parameterValue = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'parameterValue' field has been set.
      * Source code of the algorithm
      * @return True if the 'parameterValue' field has been set, false otherwise.
      */
    public boolean hasParameterValue() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'parameterValue' field.
      * Source code of the algorithm
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.AlgorithmParameter.Builder clearParameterValue() {
      parameterValue = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'inputOutputType' field.
      * 0 - Input, 1 - Outputparameter
      * @return The value.
      */
    public java.lang.Integer getInputOutputType() {
      return inputOutputType;
    }

    /**
      * Sets the value of the 'inputOutputType' field.
      * 0 - Input, 1 - Outputparameter
      * @param value The value of 'inputOutputType'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.AlgorithmParameter.Builder setInputOutputType(int value) {
      validate(fields()[3], value);
      this.inputOutputType = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'inputOutputType' field has been set.
      * 0 - Input, 1 - Outputparameter
      * @return True if the 'inputOutputType' field has been set, false otherwise.
      */
    public boolean hasInputOutputType() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'inputOutputType' field.
      * 0 - Input, 1 - Outputparameter
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.AlgorithmParameter.Builder clearInputOutputType() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'nameInAlgorithm' field.
      * Name of the parameter in the algorithm
      * @return The value.
      */
    public java.lang.String getNameInAlgorithm() {
      return nameInAlgorithm;
    }

    /**
      * Sets the value of the 'nameInAlgorithm' field.
      * Name of the parameter in the algorithm
      * @param value The value of 'nameInAlgorithm'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.AlgorithmParameter.Builder setNameInAlgorithm(java.lang.String value) {
      validate(fields()[4], value);
      this.nameInAlgorithm = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'nameInAlgorithm' field has been set.
      * Name of the parameter in the algorithm
      * @return True if the 'nameInAlgorithm' field has been set, false otherwise.
      */
    public boolean hasNameInAlgorithm() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'nameInAlgorithm' field.
      * Name of the parameter in the algorithm
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.AlgorithmParameter.Builder clearNameInAlgorithm() {
      nameInAlgorithm = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'mandatoryFlag' field.
      * 0 - False, 1 - True
      * @return The value.
      */
    public java.lang.Boolean getMandatoryFlag() {
      return mandatoryFlag;
    }

    /**
      * Sets the value of the 'mandatoryFlag' field.
      * 0 - False, 1 - True
      * @param value The value of 'mandatoryFlag'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.AlgorithmParameter.Builder setMandatoryFlag(boolean value) {
      validate(fields()[5], value);
      this.mandatoryFlag = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'mandatoryFlag' field has been set.
      * 0 - False, 1 - True
      * @return True if the 'mandatoryFlag' field has been set, false otherwise.
      */
    public boolean hasMandatoryFlag() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'mandatoryFlag' field.
      * 0 - False, 1 - True
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.AlgorithmParameter.Builder clearMandatoryFlag() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'subsystem' field.
      * Subsystem name
      * @return The value.
      */
    public java.lang.String getSubsystem() {
      return subsystem;
    }

    /**
      * Sets the value of the 'subsystem' field.
      * Subsystem name
      * @param value The value of 'subsystem'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.AlgorithmParameter.Builder setSubsystem(java.lang.String value) {
      validate(fields()[6], value);
      this.subsystem = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'subsystem' field has been set.
      * Subsystem name
      * @return True if the 'subsystem' field has been set, false otherwise.
      */
    public boolean hasSubsystem() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'subsystem' field.
      * Subsystem name
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.AlgorithmParameter.Builder clearSubsystem() {
      subsystem = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public AlgorithmParameter build() {
      try {
        AlgorithmParameter record = new AlgorithmParameter();
        record.algorithmName = fieldSetFlags()[0] ? this.algorithmName : (java.lang.String) defaultValue(fields()[0]);
        record.parameterName = fieldSetFlags()[1] ? this.parameterName : (java.lang.String) defaultValue(fields()[1]);
        record.parameterValue = fieldSetFlags()[2] ? this.parameterValue : (java.lang.String) defaultValue(fields()[2]);
        record.inputOutputType = fieldSetFlags()[3] ? this.inputOutputType : (java.lang.Integer) defaultValue(fields()[3]);
        record.nameInAlgorithm = fieldSetFlags()[4] ? this.nameInAlgorithm : (java.lang.String) defaultValue(fields()[4]);
        record.mandatoryFlag = fieldSetFlags()[5] ? this.mandatoryFlag : (java.lang.Boolean) defaultValue(fields()[5]);
        record.subsystem = fieldSetFlags()[6] ? this.subsystem : (java.lang.String) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
