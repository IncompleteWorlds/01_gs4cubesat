/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.incomplete.cubegs.common.avro.messages;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** This message returns the list of Frame Types associated with a layer */
@org.apache.avro.specific.AvroGenerated
public class MsgGetFrameTypes extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7998792455844601165L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MsgGetFrameTypes\",\"namespace\":\"com.incomplete.cubegs.common.avro.messages\",\"doc\":\"This message returns the list of Frame Types associated with a layer\",\"fields\":[{\"name\":\"authorizationToken\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Authorization token\"},{\"name\":\"layerName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Layer name\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Authorization token */
  @Deprecated public java.lang.String authorizationToken;
  /** Layer name */
  @Deprecated public java.lang.String layerName;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MsgGetFrameTypes() {}

  /**
   * All-args constructor.
   * @param authorizationToken Authorization token
   * @param layerName Layer name
   */
  public MsgGetFrameTypes(java.lang.String authorizationToken, java.lang.String layerName) {
    this.authorizationToken = authorizationToken;
    this.layerName = layerName;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return authorizationToken;
    case 1: return layerName;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: authorizationToken = (java.lang.String)value$; break;
    case 1: layerName = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'authorizationToken' field.
   * @return Authorization token
   */
  public java.lang.String getAuthorizationToken() {
    return authorizationToken;
  }

  /**
   * Sets the value of the 'authorizationToken' field.
   * Authorization token
   * @param value the value to set.
   */
  public void setAuthorizationToken(java.lang.String value) {
    this.authorizationToken = value;
  }

  /**
   * Gets the value of the 'layerName' field.
   * @return Layer name
   */
  public java.lang.String getLayerName() {
    return layerName;
  }

  /**
   * Sets the value of the 'layerName' field.
   * Layer name
   * @param value the value to set.
   */
  public void setLayerName(java.lang.String value) {
    this.layerName = value;
  }

  /**
   * Creates a new MsgGetFrameTypes RecordBuilder.
   * @return A new MsgGetFrameTypes RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.MsgGetFrameTypes.Builder newBuilder() {
    return new com.incomplete.cubegs.common.avro.messages.MsgGetFrameTypes.Builder();
  }

  /**
   * Creates a new MsgGetFrameTypes RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MsgGetFrameTypes RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.MsgGetFrameTypes.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.MsgGetFrameTypes.Builder other) {
    return new com.incomplete.cubegs.common.avro.messages.MsgGetFrameTypes.Builder(other);
  }

  /**
   * Creates a new MsgGetFrameTypes RecordBuilder by copying an existing MsgGetFrameTypes instance.
   * @param other The existing instance to copy.
   * @return A new MsgGetFrameTypes RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.MsgGetFrameTypes.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.MsgGetFrameTypes other) {
    return new com.incomplete.cubegs.common.avro.messages.MsgGetFrameTypes.Builder(other);
  }

  /**
   * RecordBuilder for MsgGetFrameTypes instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MsgGetFrameTypes>
    implements org.apache.avro.data.RecordBuilder<MsgGetFrameTypes> {

    /** Authorization token */
    private java.lang.String authorizationToken;
    /** Layer name */
    private java.lang.String layerName;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.MsgGetFrameTypes.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.authorizationToken)) {
        this.authorizationToken = data().deepCopy(fields()[0].schema(), other.authorizationToken);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.layerName)) {
        this.layerName = data().deepCopy(fields()[1].schema(), other.layerName);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing MsgGetFrameTypes instance
     * @param other The existing instance to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.MsgGetFrameTypes other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.authorizationToken)) {
        this.authorizationToken = data().deepCopy(fields()[0].schema(), other.authorizationToken);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.layerName)) {
        this.layerName = data().deepCopy(fields()[1].schema(), other.layerName);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'authorizationToken' field.
      * Authorization token
      * @return The value.
      */
    public java.lang.String getAuthorizationToken() {
      return authorizationToken;
    }

    /**
      * Sets the value of the 'authorizationToken' field.
      * Authorization token
      * @param value The value of 'authorizationToken'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgGetFrameTypes.Builder setAuthorizationToken(java.lang.String value) {
      validate(fields()[0], value);
      this.authorizationToken = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'authorizationToken' field has been set.
      * Authorization token
      * @return True if the 'authorizationToken' field has been set, false otherwise.
      */
    public boolean hasAuthorizationToken() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'authorizationToken' field.
      * Authorization token
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgGetFrameTypes.Builder clearAuthorizationToken() {
      authorizationToken = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'layerName' field.
      * Layer name
      * @return The value.
      */
    public java.lang.String getLayerName() {
      return layerName;
    }

    /**
      * Sets the value of the 'layerName' field.
      * Layer name
      * @param value The value of 'layerName'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgGetFrameTypes.Builder setLayerName(java.lang.String value) {
      validate(fields()[1], value);
      this.layerName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'layerName' field has been set.
      * Layer name
      * @return True if the 'layerName' field has been set, false otherwise.
      */
    public boolean hasLayerName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'layerName' field.
      * Layer name
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgGetFrameTypes.Builder clearLayerName() {
      layerName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public MsgGetFrameTypes build() {
      try {
        MsgGetFrameTypes record = new MsgGetFrameTypes();
        record.authorizationToken = fieldSetFlags()[0] ? this.authorizationToken : (java.lang.String) defaultValue(fields()[0]);
        record.layerName = fieldSetFlags()[1] ? this.layerName : (java.lang.String) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
