/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.incomplete.cubegs.common.avro.messages;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** A Configuration Parameter. It is generic */
@org.apache.avro.specific.AvroGenerated
public class ConfigurationParameter extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8014321455885860345L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ConfigurationParameter\",\"namespace\":\"com.incomplete.cubegs.common.avro.messages\",\"doc\":\"A Configuration Parameter. It is generic\",\"fields\":[{\"name\":\"identifier\",\"type\":\"int\",\"doc\":\"Unique identifier of the parameter\"},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Name of the parameter\"},{\"name\":\"description\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Description of the parameter\"},{\"name\":\"type\",\"type\":\"int\",\"doc\":\"Parameter type\"},{\"name\":\"value\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Event creation time in milliseconds\"},{\"name\":\"userId\",\"type\":\"int\",\"doc\":\"User identifier\"},{\"name\":\"missionName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Mission name\"},{\"name\":\"layerName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Layer name\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Unique identifier of the parameter */
  @Deprecated public int identifier;
  /** Name of the parameter */
  @Deprecated public java.lang.String name;
  /** Description of the parameter */
  @Deprecated public java.lang.String description;
  /** Parameter type */
  @Deprecated public int type;
  /** Event creation time in milliseconds */
  @Deprecated public java.lang.String value;
  /** User identifier */
  @Deprecated public int userId;
  /** Mission name */
  @Deprecated public java.lang.String missionName;
  /** Layer name */
  @Deprecated public java.lang.String layerName;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ConfigurationParameter() {}

  /**
   * All-args constructor.
   * @param identifier Unique identifier of the parameter
   * @param name Name of the parameter
   * @param description Description of the parameter
   * @param type Parameter type
   * @param value Event creation time in milliseconds
   * @param userId User identifier
   * @param missionName Mission name
   * @param layerName Layer name
   */
  public ConfigurationParameter(java.lang.Integer identifier, java.lang.String name, java.lang.String description, java.lang.Integer type, java.lang.String value, java.lang.Integer userId, java.lang.String missionName, java.lang.String layerName) {
    this.identifier = identifier;
    this.name = name;
    this.description = description;
    this.type = type;
    this.value = value;
    this.userId = userId;
    this.missionName = missionName;
    this.layerName = layerName;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return identifier;
    case 1: return name;
    case 2: return description;
    case 3: return type;
    case 4: return value;
    case 5: return userId;
    case 6: return missionName;
    case 7: return layerName;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: identifier = (java.lang.Integer)value$; break;
    case 1: name = (java.lang.String)value$; break;
    case 2: description = (java.lang.String)value$; break;
    case 3: type = (java.lang.Integer)value$; break;
    case 4: value = (java.lang.String)value$; break;
    case 5: userId = (java.lang.Integer)value$; break;
    case 6: missionName = (java.lang.String)value$; break;
    case 7: layerName = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'identifier' field.
   * @return Unique identifier of the parameter
   */
  public java.lang.Integer getIdentifier() {
    return identifier;
  }

  /**
   * Sets the value of the 'identifier' field.
   * Unique identifier of the parameter
   * @param value the value to set.
   */
  public void setIdentifier(java.lang.Integer value) {
    this.identifier = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return Name of the parameter
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * Name of the parameter
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return Description of the parameter
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * Description of the parameter
   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return Parameter type
   */
  public java.lang.Integer getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * Parameter type
   * @param value the value to set.
   */
  public void setType(java.lang.Integer value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'value' field.
   * @return Event creation time in milliseconds
   */
  public java.lang.String getValue() {
    return value;
  }

  /**
   * Sets the value of the 'value' field.
   * Event creation time in milliseconds
   * @param value the value to set.
   */
  public void setValue(java.lang.String value) {
    this.value = value;
  }

  /**
   * Gets the value of the 'userId' field.
   * @return User identifier
   */
  public java.lang.Integer getUserId() {
    return userId;
  }

  /**
   * Sets the value of the 'userId' field.
   * User identifier
   * @param value the value to set.
   */
  public void setUserId(java.lang.Integer value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'missionName' field.
   * @return Mission name
   */
  public java.lang.String getMissionName() {
    return missionName;
  }

  /**
   * Sets the value of the 'missionName' field.
   * Mission name
   * @param value the value to set.
   */
  public void setMissionName(java.lang.String value) {
    this.missionName = value;
  }

  /**
   * Gets the value of the 'layerName' field.
   * @return Layer name
   */
  public java.lang.String getLayerName() {
    return layerName;
  }

  /**
   * Sets the value of the 'layerName' field.
   * Layer name
   * @param value the value to set.
   */
  public void setLayerName(java.lang.String value) {
    this.layerName = value;
  }

  /**
   * Creates a new ConfigurationParameter RecordBuilder.
   * @return A new ConfigurationParameter RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.ConfigurationParameter.Builder newBuilder() {
    return new com.incomplete.cubegs.common.avro.messages.ConfigurationParameter.Builder();
  }

  /**
   * Creates a new ConfigurationParameter RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ConfigurationParameter RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.ConfigurationParameter.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.ConfigurationParameter.Builder other) {
    return new com.incomplete.cubegs.common.avro.messages.ConfigurationParameter.Builder(other);
  }

  /**
   * Creates a new ConfigurationParameter RecordBuilder by copying an existing ConfigurationParameter instance.
   * @param other The existing instance to copy.
   * @return A new ConfigurationParameter RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.ConfigurationParameter.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.ConfigurationParameter other) {
    return new com.incomplete.cubegs.common.avro.messages.ConfigurationParameter.Builder(other);
  }

  /**
   * RecordBuilder for ConfigurationParameter instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ConfigurationParameter>
    implements org.apache.avro.data.RecordBuilder<ConfigurationParameter> {

    /** Unique identifier of the parameter */
    private int identifier;
    /** Name of the parameter */
    private java.lang.String name;
    /** Description of the parameter */
    private java.lang.String description;
    /** Parameter type */
    private int type;
    /** Event creation time in milliseconds */
    private java.lang.String value;
    /** User identifier */
    private int userId;
    /** Mission name */
    private java.lang.String missionName;
    /** Layer name */
    private java.lang.String layerName;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.ConfigurationParameter.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.identifier)) {
        this.identifier = data().deepCopy(fields()[0].schema(), other.identifier);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.type)) {
        this.type = data().deepCopy(fields()[3].schema(), other.type);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.value)) {
        this.value = data().deepCopy(fields()[4].schema(), other.value);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.userId)) {
        this.userId = data().deepCopy(fields()[5].schema(), other.userId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.missionName)) {
        this.missionName = data().deepCopy(fields()[6].schema(), other.missionName);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.layerName)) {
        this.layerName = data().deepCopy(fields()[7].schema(), other.layerName);
        fieldSetFlags()[7] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing ConfigurationParameter instance
     * @param other The existing instance to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.ConfigurationParameter other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.identifier)) {
        this.identifier = data().deepCopy(fields()[0].schema(), other.identifier);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.type)) {
        this.type = data().deepCopy(fields()[3].schema(), other.type);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.value)) {
        this.value = data().deepCopy(fields()[4].schema(), other.value);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.userId)) {
        this.userId = data().deepCopy(fields()[5].schema(), other.userId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.missionName)) {
        this.missionName = data().deepCopy(fields()[6].schema(), other.missionName);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.layerName)) {
        this.layerName = data().deepCopy(fields()[7].schema(), other.layerName);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'identifier' field.
      * Unique identifier of the parameter
      * @return The value.
      */
    public java.lang.Integer getIdentifier() {
      return identifier;
    }

    /**
      * Sets the value of the 'identifier' field.
      * Unique identifier of the parameter
      * @param value The value of 'identifier'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.ConfigurationParameter.Builder setIdentifier(int value) {
      validate(fields()[0], value);
      this.identifier = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'identifier' field has been set.
      * Unique identifier of the parameter
      * @return True if the 'identifier' field has been set, false otherwise.
      */
    public boolean hasIdentifier() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'identifier' field.
      * Unique identifier of the parameter
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.ConfigurationParameter.Builder clearIdentifier() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * Name of the parameter
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * Name of the parameter
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.ConfigurationParameter.Builder setName(java.lang.String value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * Name of the parameter
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * Name of the parameter
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.ConfigurationParameter.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * Description of the parameter
      * @return The value.
      */
    public java.lang.String getDescription() {
      return description;
    }

    /**
      * Sets the value of the 'description' field.
      * Description of the parameter
      * @param value The value of 'description'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.ConfigurationParameter.Builder setDescription(java.lang.String value) {
      validate(fields()[2], value);
      this.description = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * Description of the parameter
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'description' field.
      * Description of the parameter
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.ConfigurationParameter.Builder clearDescription() {
      description = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * Parameter type
      * @return The value.
      */
    public java.lang.Integer getType() {
      return type;
    }

    /**
      * Sets the value of the 'type' field.
      * Parameter type
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.ConfigurationParameter.Builder setType(int value) {
      validate(fields()[3], value);
      this.type = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * Parameter type
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'type' field.
      * Parameter type
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.ConfigurationParameter.Builder clearType() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'value' field.
      * Event creation time in milliseconds
      * @return The value.
      */
    public java.lang.String getValue() {
      return value;
    }

    /**
      * Sets the value of the 'value' field.
      * Event creation time in milliseconds
      * @param value The value of 'value'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.ConfigurationParameter.Builder setValue(java.lang.String value) {
      validate(fields()[4], value);
      this.value = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'value' field has been set.
      * Event creation time in milliseconds
      * @return True if the 'value' field has been set, false otherwise.
      */
    public boolean hasValue() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'value' field.
      * Event creation time in milliseconds
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.ConfigurationParameter.Builder clearValue() {
      value = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'userId' field.
      * User identifier
      * @return The value.
      */
    public java.lang.Integer getUserId() {
      return userId;
    }

    /**
      * Sets the value of the 'userId' field.
      * User identifier
      * @param value The value of 'userId'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.ConfigurationParameter.Builder setUserId(int value) {
      validate(fields()[5], value);
      this.userId = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'userId' field has been set.
      * User identifier
      * @return True if the 'userId' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'userId' field.
      * User identifier
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.ConfigurationParameter.Builder clearUserId() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'missionName' field.
      * Mission name
      * @return The value.
      */
    public java.lang.String getMissionName() {
      return missionName;
    }

    /**
      * Sets the value of the 'missionName' field.
      * Mission name
      * @param value The value of 'missionName'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.ConfigurationParameter.Builder setMissionName(java.lang.String value) {
      validate(fields()[6], value);
      this.missionName = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'missionName' field has been set.
      * Mission name
      * @return True if the 'missionName' field has been set, false otherwise.
      */
    public boolean hasMissionName() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'missionName' field.
      * Mission name
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.ConfigurationParameter.Builder clearMissionName() {
      missionName = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'layerName' field.
      * Layer name
      * @return The value.
      */
    public java.lang.String getLayerName() {
      return layerName;
    }

    /**
      * Sets the value of the 'layerName' field.
      * Layer name
      * @param value The value of 'layerName'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.ConfigurationParameter.Builder setLayerName(java.lang.String value) {
      validate(fields()[7], value);
      this.layerName = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'layerName' field has been set.
      * Layer name
      * @return True if the 'layerName' field has been set, false otherwise.
      */
    public boolean hasLayerName() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'layerName' field.
      * Layer name
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.ConfigurationParameter.Builder clearLayerName() {
      layerName = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    public ConfigurationParameter build() {
      try {
        ConfigurationParameter record = new ConfigurationParameter();
        record.identifier = fieldSetFlags()[0] ? this.identifier : (java.lang.Integer) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.String) defaultValue(fields()[1]);
        record.description = fieldSetFlags()[2] ? this.description : (java.lang.String) defaultValue(fields()[2]);
        record.type = fieldSetFlags()[3] ? this.type : (java.lang.Integer) defaultValue(fields()[3]);
        record.value = fieldSetFlags()[4] ? this.value : (java.lang.String) defaultValue(fields()[4]);
        record.userId = fieldSetFlags()[5] ? this.userId : (java.lang.Integer) defaultValue(fields()[5]);
        record.missionName = fieldSetFlags()[6] ? this.missionName : (java.lang.String) defaultValue(fields()[6]);
        record.layerName = fieldSetFlags()[7] ? this.layerName : (java.lang.String) defaultValue(fields()[7]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
