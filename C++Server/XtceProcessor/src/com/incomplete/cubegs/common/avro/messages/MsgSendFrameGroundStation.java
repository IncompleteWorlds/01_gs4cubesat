/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.incomplete.cubegs.common.avro.messages;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** This message uploads a frame to a S/C using a connection */
@org.apache.avro.specific.AvroGenerated
public class MsgSendFrameGroundStation extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6095984091054112070L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MsgSendFrameGroundStation\",\"namespace\":\"com.incomplete.cubegs.common.avro.messages\",\"doc\":\"This message uploads a frame to a S/C using a connection\",\"fields\":[{\"name\":\"authorizationToken\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Authorization token\"},{\"name\":\"connectionId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Ground Station connection identifier\"},{\"name\":\"data\",\"type\":\"bytes\",\"doc\":\"Array of bytes\"},{\"name\":\"dataLength\",\"type\":\"int\",\"doc\":\"Number of bytes to be sent\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Authorization token */
  @Deprecated public java.lang.String authorizationToken;
  /** Ground Station connection identifier */
  @Deprecated public java.lang.String connectionId;
  /** Array of bytes */
  @Deprecated public java.nio.ByteBuffer data;
  /** Number of bytes to be sent */
  @Deprecated public int dataLength;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MsgSendFrameGroundStation() {}

  /**
   * All-args constructor.
   * @param authorizationToken Authorization token
   * @param connectionId Ground Station connection identifier
   * @param data Array of bytes
   * @param dataLength Number of bytes to be sent
   */
  public MsgSendFrameGroundStation(java.lang.String authorizationToken, java.lang.String connectionId, java.nio.ByteBuffer data, java.lang.Integer dataLength) {
    this.authorizationToken = authorizationToken;
    this.connectionId = connectionId;
    this.data = data;
    this.dataLength = dataLength;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return authorizationToken;
    case 1: return connectionId;
    case 2: return data;
    case 3: return dataLength;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: authorizationToken = (java.lang.String)value$; break;
    case 1: connectionId = (java.lang.String)value$; break;
    case 2: data = (java.nio.ByteBuffer)value$; break;
    case 3: dataLength = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'authorizationToken' field.
   * @return Authorization token
   */
  public java.lang.String getAuthorizationToken() {
    return authorizationToken;
  }

  /**
   * Sets the value of the 'authorizationToken' field.
   * Authorization token
   * @param value the value to set.
   */
  public void setAuthorizationToken(java.lang.String value) {
    this.authorizationToken = value;
  }

  /**
   * Gets the value of the 'connectionId' field.
   * @return Ground Station connection identifier
   */
  public java.lang.String getConnectionId() {
    return connectionId;
  }

  /**
   * Sets the value of the 'connectionId' field.
   * Ground Station connection identifier
   * @param value the value to set.
   */
  public void setConnectionId(java.lang.String value) {
    this.connectionId = value;
  }

  /**
   * Gets the value of the 'data' field.
   * @return Array of bytes
   */
  public java.nio.ByteBuffer getData() {
    return data;
  }

  /**
   * Sets the value of the 'data' field.
   * Array of bytes
   * @param value the value to set.
   */
  public void setData(java.nio.ByteBuffer value) {
    this.data = value;
  }

  /**
   * Gets the value of the 'dataLength' field.
   * @return Number of bytes to be sent
   */
  public java.lang.Integer getDataLength() {
    return dataLength;
  }

  /**
   * Sets the value of the 'dataLength' field.
   * Number of bytes to be sent
   * @param value the value to set.
   */
  public void setDataLength(java.lang.Integer value) {
    this.dataLength = value;
  }

  /**
   * Creates a new MsgSendFrameGroundStation RecordBuilder.
   * @return A new MsgSendFrameGroundStation RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.MsgSendFrameGroundStation.Builder newBuilder() {
    return new com.incomplete.cubegs.common.avro.messages.MsgSendFrameGroundStation.Builder();
  }

  /**
   * Creates a new MsgSendFrameGroundStation RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MsgSendFrameGroundStation RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.MsgSendFrameGroundStation.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.MsgSendFrameGroundStation.Builder other) {
    return new com.incomplete.cubegs.common.avro.messages.MsgSendFrameGroundStation.Builder(other);
  }

  /**
   * Creates a new MsgSendFrameGroundStation RecordBuilder by copying an existing MsgSendFrameGroundStation instance.
   * @param other The existing instance to copy.
   * @return A new MsgSendFrameGroundStation RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.MsgSendFrameGroundStation.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.MsgSendFrameGroundStation other) {
    return new com.incomplete.cubegs.common.avro.messages.MsgSendFrameGroundStation.Builder(other);
  }

  /**
   * RecordBuilder for MsgSendFrameGroundStation instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MsgSendFrameGroundStation>
    implements org.apache.avro.data.RecordBuilder<MsgSendFrameGroundStation> {

    /** Authorization token */
    private java.lang.String authorizationToken;
    /** Ground Station connection identifier */
    private java.lang.String connectionId;
    /** Array of bytes */
    private java.nio.ByteBuffer data;
    /** Number of bytes to be sent */
    private int dataLength;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.MsgSendFrameGroundStation.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.authorizationToken)) {
        this.authorizationToken = data().deepCopy(fields()[0].schema(), other.authorizationToken);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.connectionId)) {
        this.connectionId = data().deepCopy(fields()[1].schema(), other.connectionId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.data)) {
        this.data = data().deepCopy(fields()[2].schema(), other.data);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.dataLength)) {
        this.dataLength = data().deepCopy(fields()[3].schema(), other.dataLength);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing MsgSendFrameGroundStation instance
     * @param other The existing instance to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.MsgSendFrameGroundStation other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.authorizationToken)) {
        this.authorizationToken = data().deepCopy(fields()[0].schema(), other.authorizationToken);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.connectionId)) {
        this.connectionId = data().deepCopy(fields()[1].schema(), other.connectionId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.data)) {
        this.data = data().deepCopy(fields()[2].schema(), other.data);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.dataLength)) {
        this.dataLength = data().deepCopy(fields()[3].schema(), other.dataLength);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'authorizationToken' field.
      * Authorization token
      * @return The value.
      */
    public java.lang.String getAuthorizationToken() {
      return authorizationToken;
    }

    /**
      * Sets the value of the 'authorizationToken' field.
      * Authorization token
      * @param value The value of 'authorizationToken'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgSendFrameGroundStation.Builder setAuthorizationToken(java.lang.String value) {
      validate(fields()[0], value);
      this.authorizationToken = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'authorizationToken' field has been set.
      * Authorization token
      * @return True if the 'authorizationToken' field has been set, false otherwise.
      */
    public boolean hasAuthorizationToken() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'authorizationToken' field.
      * Authorization token
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgSendFrameGroundStation.Builder clearAuthorizationToken() {
      authorizationToken = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'connectionId' field.
      * Ground Station connection identifier
      * @return The value.
      */
    public java.lang.String getConnectionId() {
      return connectionId;
    }

    /**
      * Sets the value of the 'connectionId' field.
      * Ground Station connection identifier
      * @param value The value of 'connectionId'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgSendFrameGroundStation.Builder setConnectionId(java.lang.String value) {
      validate(fields()[1], value);
      this.connectionId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'connectionId' field has been set.
      * Ground Station connection identifier
      * @return True if the 'connectionId' field has been set, false otherwise.
      */
    public boolean hasConnectionId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'connectionId' field.
      * Ground Station connection identifier
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgSendFrameGroundStation.Builder clearConnectionId() {
      connectionId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'data' field.
      * Array of bytes
      * @return The value.
      */
    public java.nio.ByteBuffer getData() {
      return data;
    }

    /**
      * Sets the value of the 'data' field.
      * Array of bytes
      * @param value The value of 'data'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgSendFrameGroundStation.Builder setData(java.nio.ByteBuffer value) {
      validate(fields()[2], value);
      this.data = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'data' field has been set.
      * Array of bytes
      * @return True if the 'data' field has been set, false otherwise.
      */
    public boolean hasData() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'data' field.
      * Array of bytes
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgSendFrameGroundStation.Builder clearData() {
      data = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'dataLength' field.
      * Number of bytes to be sent
      * @return The value.
      */
    public java.lang.Integer getDataLength() {
      return dataLength;
    }

    /**
      * Sets the value of the 'dataLength' field.
      * Number of bytes to be sent
      * @param value The value of 'dataLength'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgSendFrameGroundStation.Builder setDataLength(int value) {
      validate(fields()[3], value);
      this.dataLength = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'dataLength' field has been set.
      * Number of bytes to be sent
      * @return True if the 'dataLength' field has been set, false otherwise.
      */
    public boolean hasDataLength() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'dataLength' field.
      * Number of bytes to be sent
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgSendFrameGroundStation.Builder clearDataLength() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public MsgSendFrameGroundStation build() {
      try {
        MsgSendFrameGroundStation record = new MsgSendFrameGroundStation();
        record.authorizationToken = fieldSetFlags()[0] ? this.authorizationToken : (java.lang.String) defaultValue(fields()[0]);
        record.connectionId = fieldSetFlags()[1] ? this.connectionId : (java.lang.String) defaultValue(fields()[1]);
        record.data = fieldSetFlags()[2] ? this.data : (java.nio.ByteBuffer) defaultValue(fields()[2]);
        record.dataLength = fieldSetFlags()[3] ? this.dataLength : (java.lang.Integer) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
