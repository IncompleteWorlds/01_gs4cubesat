/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.incomplete.cubegs.common.avro.messages;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** This message register a new user of the CubeGS  */
@org.apache.avro.specific.AvroGenerated
public class MsgRegisterUserOld extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2299919006070098335L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MsgRegisterUserOld\",\"namespace\":\"com.incomplete.cubegs.common.avro.messages\",\"doc\":\"This message register a new user of the CubeGS \",\"fields\":[{\"name\":\"firstName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"First name\"},{\"name\":\"lastName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Last name\"},{\"name\":\"userName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"User name\"},{\"name\":\"hashPassword\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Hash of password\"},{\"name\":\"emailAddress\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Email address of the user\"},{\"name\":\"missionName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Mission name\"},{\"name\":\"missionDescription\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Mission description\"},{\"name\":\"missionCountry\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Country\"},{\"name\":\"missionOwner\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Company or person that owns the mission\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** First name */
  @Deprecated public java.lang.String firstName;
  /** Last name */
  @Deprecated public java.lang.String lastName;
  /** User name */
  @Deprecated public java.lang.String userName;
  /** Hash of password */
  @Deprecated public java.lang.String hashPassword;
  /** Email address of the user */
  @Deprecated public java.lang.String emailAddress;
  /** Mission name */
  @Deprecated public java.lang.String missionName;
  /** Mission description */
  @Deprecated public java.lang.String missionDescription;
  /** Country */
  @Deprecated public java.lang.String missionCountry;
  /** Company or person that owns the mission */
  @Deprecated public java.lang.String missionOwner;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MsgRegisterUserOld() {}

  /**
   * All-args constructor.
   * @param firstName First name
   * @param lastName Last name
   * @param userName User name
   * @param hashPassword Hash of password
   * @param emailAddress Email address of the user
   * @param missionName Mission name
   * @param missionDescription Mission description
   * @param missionCountry Country
   * @param missionOwner Company or person that owns the mission
   */
  public MsgRegisterUserOld(java.lang.String firstName, java.lang.String lastName, java.lang.String userName, java.lang.String hashPassword, java.lang.String emailAddress, java.lang.String missionName, java.lang.String missionDescription, java.lang.String missionCountry, java.lang.String missionOwner) {
    this.firstName = firstName;
    this.lastName = lastName;
    this.userName = userName;
    this.hashPassword = hashPassword;
    this.emailAddress = emailAddress;
    this.missionName = missionName;
    this.missionDescription = missionDescription;
    this.missionCountry = missionCountry;
    this.missionOwner = missionOwner;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return firstName;
    case 1: return lastName;
    case 2: return userName;
    case 3: return hashPassword;
    case 4: return emailAddress;
    case 5: return missionName;
    case 6: return missionDescription;
    case 7: return missionCountry;
    case 8: return missionOwner;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: firstName = (java.lang.String)value$; break;
    case 1: lastName = (java.lang.String)value$; break;
    case 2: userName = (java.lang.String)value$; break;
    case 3: hashPassword = (java.lang.String)value$; break;
    case 4: emailAddress = (java.lang.String)value$; break;
    case 5: missionName = (java.lang.String)value$; break;
    case 6: missionDescription = (java.lang.String)value$; break;
    case 7: missionCountry = (java.lang.String)value$; break;
    case 8: missionOwner = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'firstName' field.
   * @return First name
   */
  public java.lang.String getFirstName() {
    return firstName;
  }

  /**
   * Sets the value of the 'firstName' field.
   * First name
   * @param value the value to set.
   */
  public void setFirstName(java.lang.String value) {
    this.firstName = value;
  }

  /**
   * Gets the value of the 'lastName' field.
   * @return Last name
   */
  public java.lang.String getLastName() {
    return lastName;
  }

  /**
   * Sets the value of the 'lastName' field.
   * Last name
   * @param value the value to set.
   */
  public void setLastName(java.lang.String value) {
    this.lastName = value;
  }

  /**
   * Gets the value of the 'userName' field.
   * @return User name
   */
  public java.lang.String getUserName() {
    return userName;
  }

  /**
   * Sets the value of the 'userName' field.
   * User name
   * @param value the value to set.
   */
  public void setUserName(java.lang.String value) {
    this.userName = value;
  }

  /**
   * Gets the value of the 'hashPassword' field.
   * @return Hash of password
   */
  public java.lang.String getHashPassword() {
    return hashPassword;
  }

  /**
   * Sets the value of the 'hashPassword' field.
   * Hash of password
   * @param value the value to set.
   */
  public void setHashPassword(java.lang.String value) {
    this.hashPassword = value;
  }

  /**
   * Gets the value of the 'emailAddress' field.
   * @return Email address of the user
   */
  public java.lang.String getEmailAddress() {
    return emailAddress;
  }

  /**
   * Sets the value of the 'emailAddress' field.
   * Email address of the user
   * @param value the value to set.
   */
  public void setEmailAddress(java.lang.String value) {
    this.emailAddress = value;
  }

  /**
   * Gets the value of the 'missionName' field.
   * @return Mission name
   */
  public java.lang.String getMissionName() {
    return missionName;
  }

  /**
   * Sets the value of the 'missionName' field.
   * Mission name
   * @param value the value to set.
   */
  public void setMissionName(java.lang.String value) {
    this.missionName = value;
  }

  /**
   * Gets the value of the 'missionDescription' field.
   * @return Mission description
   */
  public java.lang.String getMissionDescription() {
    return missionDescription;
  }

  /**
   * Sets the value of the 'missionDescription' field.
   * Mission description
   * @param value the value to set.
   */
  public void setMissionDescription(java.lang.String value) {
    this.missionDescription = value;
  }

  /**
   * Gets the value of the 'missionCountry' field.
   * @return Country
   */
  public java.lang.String getMissionCountry() {
    return missionCountry;
  }

  /**
   * Sets the value of the 'missionCountry' field.
   * Country
   * @param value the value to set.
   */
  public void setMissionCountry(java.lang.String value) {
    this.missionCountry = value;
  }

  /**
   * Gets the value of the 'missionOwner' field.
   * @return Company or person that owns the mission
   */
  public java.lang.String getMissionOwner() {
    return missionOwner;
  }

  /**
   * Sets the value of the 'missionOwner' field.
   * Company or person that owns the mission
   * @param value the value to set.
   */
  public void setMissionOwner(java.lang.String value) {
    this.missionOwner = value;
  }

  /**
   * Creates a new MsgRegisterUserOld RecordBuilder.
   * @return A new MsgRegisterUserOld RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder newBuilder() {
    return new com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder();
  }

  /**
   * Creates a new MsgRegisterUserOld RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MsgRegisterUserOld RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder other) {
    return new com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder(other);
  }

  /**
   * Creates a new MsgRegisterUserOld RecordBuilder by copying an existing MsgRegisterUserOld instance.
   * @param other The existing instance to copy.
   * @return A new MsgRegisterUserOld RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld other) {
    return new com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder(other);
  }

  /**
   * RecordBuilder for MsgRegisterUserOld instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MsgRegisterUserOld>
    implements org.apache.avro.data.RecordBuilder<MsgRegisterUserOld> {

    /** First name */
    private java.lang.String firstName;
    /** Last name */
    private java.lang.String lastName;
    /** User name */
    private java.lang.String userName;
    /** Hash of password */
    private java.lang.String hashPassword;
    /** Email address of the user */
    private java.lang.String emailAddress;
    /** Mission name */
    private java.lang.String missionName;
    /** Mission description */
    private java.lang.String missionDescription;
    /** Country */
    private java.lang.String missionCountry;
    /** Company or person that owns the mission */
    private java.lang.String missionOwner;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.firstName)) {
        this.firstName = data().deepCopy(fields()[0].schema(), other.firstName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.lastName)) {
        this.lastName = data().deepCopy(fields()[1].schema(), other.lastName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.userName)) {
        this.userName = data().deepCopy(fields()[2].schema(), other.userName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.hashPassword)) {
        this.hashPassword = data().deepCopy(fields()[3].schema(), other.hashPassword);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.emailAddress)) {
        this.emailAddress = data().deepCopy(fields()[4].schema(), other.emailAddress);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.missionName)) {
        this.missionName = data().deepCopy(fields()[5].schema(), other.missionName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.missionDescription)) {
        this.missionDescription = data().deepCopy(fields()[6].schema(), other.missionDescription);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.missionCountry)) {
        this.missionCountry = data().deepCopy(fields()[7].schema(), other.missionCountry);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.missionOwner)) {
        this.missionOwner = data().deepCopy(fields()[8].schema(), other.missionOwner);
        fieldSetFlags()[8] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing MsgRegisterUserOld instance
     * @param other The existing instance to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.firstName)) {
        this.firstName = data().deepCopy(fields()[0].schema(), other.firstName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.lastName)) {
        this.lastName = data().deepCopy(fields()[1].schema(), other.lastName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.userName)) {
        this.userName = data().deepCopy(fields()[2].schema(), other.userName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.hashPassword)) {
        this.hashPassword = data().deepCopy(fields()[3].schema(), other.hashPassword);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.emailAddress)) {
        this.emailAddress = data().deepCopy(fields()[4].schema(), other.emailAddress);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.missionName)) {
        this.missionName = data().deepCopy(fields()[5].schema(), other.missionName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.missionDescription)) {
        this.missionDescription = data().deepCopy(fields()[6].schema(), other.missionDescription);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.missionCountry)) {
        this.missionCountry = data().deepCopy(fields()[7].schema(), other.missionCountry);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.missionOwner)) {
        this.missionOwner = data().deepCopy(fields()[8].schema(), other.missionOwner);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'firstName' field.
      * First name
      * @return The value.
      */
    public java.lang.String getFirstName() {
      return firstName;
    }

    /**
      * Sets the value of the 'firstName' field.
      * First name
      * @param value The value of 'firstName'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder setFirstName(java.lang.String value) {
      validate(fields()[0], value);
      this.firstName = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'firstName' field has been set.
      * First name
      * @return True if the 'firstName' field has been set, false otherwise.
      */
    public boolean hasFirstName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'firstName' field.
      * First name
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder clearFirstName() {
      firstName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastName' field.
      * Last name
      * @return The value.
      */
    public java.lang.String getLastName() {
      return lastName;
    }

    /**
      * Sets the value of the 'lastName' field.
      * Last name
      * @param value The value of 'lastName'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder setLastName(java.lang.String value) {
      validate(fields()[1], value);
      this.lastName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'lastName' field has been set.
      * Last name
      * @return True if the 'lastName' field has been set, false otherwise.
      */
    public boolean hasLastName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'lastName' field.
      * Last name
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder clearLastName() {
      lastName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'userName' field.
      * User name
      * @return The value.
      */
    public java.lang.String getUserName() {
      return userName;
    }

    /**
      * Sets the value of the 'userName' field.
      * User name
      * @param value The value of 'userName'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder setUserName(java.lang.String value) {
      validate(fields()[2], value);
      this.userName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'userName' field has been set.
      * User name
      * @return True if the 'userName' field has been set, false otherwise.
      */
    public boolean hasUserName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'userName' field.
      * User name
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder clearUserName() {
      userName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'hashPassword' field.
      * Hash of password
      * @return The value.
      */
    public java.lang.String getHashPassword() {
      return hashPassword;
    }

    /**
      * Sets the value of the 'hashPassword' field.
      * Hash of password
      * @param value The value of 'hashPassword'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder setHashPassword(java.lang.String value) {
      validate(fields()[3], value);
      this.hashPassword = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'hashPassword' field has been set.
      * Hash of password
      * @return True if the 'hashPassword' field has been set, false otherwise.
      */
    public boolean hasHashPassword() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'hashPassword' field.
      * Hash of password
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder clearHashPassword() {
      hashPassword = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'emailAddress' field.
      * Email address of the user
      * @return The value.
      */
    public java.lang.String getEmailAddress() {
      return emailAddress;
    }

    /**
      * Sets the value of the 'emailAddress' field.
      * Email address of the user
      * @param value The value of 'emailAddress'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder setEmailAddress(java.lang.String value) {
      validate(fields()[4], value);
      this.emailAddress = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'emailAddress' field has been set.
      * Email address of the user
      * @return True if the 'emailAddress' field has been set, false otherwise.
      */
    public boolean hasEmailAddress() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'emailAddress' field.
      * Email address of the user
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder clearEmailAddress() {
      emailAddress = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'missionName' field.
      * Mission name
      * @return The value.
      */
    public java.lang.String getMissionName() {
      return missionName;
    }

    /**
      * Sets the value of the 'missionName' field.
      * Mission name
      * @param value The value of 'missionName'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder setMissionName(java.lang.String value) {
      validate(fields()[5], value);
      this.missionName = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'missionName' field has been set.
      * Mission name
      * @return True if the 'missionName' field has been set, false otherwise.
      */
    public boolean hasMissionName() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'missionName' field.
      * Mission name
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder clearMissionName() {
      missionName = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'missionDescription' field.
      * Mission description
      * @return The value.
      */
    public java.lang.String getMissionDescription() {
      return missionDescription;
    }

    /**
      * Sets the value of the 'missionDescription' field.
      * Mission description
      * @param value The value of 'missionDescription'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder setMissionDescription(java.lang.String value) {
      validate(fields()[6], value);
      this.missionDescription = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'missionDescription' field has been set.
      * Mission description
      * @return True if the 'missionDescription' field has been set, false otherwise.
      */
    public boolean hasMissionDescription() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'missionDescription' field.
      * Mission description
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder clearMissionDescription() {
      missionDescription = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'missionCountry' field.
      * Country
      * @return The value.
      */
    public java.lang.String getMissionCountry() {
      return missionCountry;
    }

    /**
      * Sets the value of the 'missionCountry' field.
      * Country
      * @param value The value of 'missionCountry'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder setMissionCountry(java.lang.String value) {
      validate(fields()[7], value);
      this.missionCountry = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'missionCountry' field has been set.
      * Country
      * @return True if the 'missionCountry' field has been set, false otherwise.
      */
    public boolean hasMissionCountry() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'missionCountry' field.
      * Country
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder clearMissionCountry() {
      missionCountry = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'missionOwner' field.
      * Company or person that owns the mission
      * @return The value.
      */
    public java.lang.String getMissionOwner() {
      return missionOwner;
    }

    /**
      * Sets the value of the 'missionOwner' field.
      * Company or person that owns the mission
      * @param value The value of 'missionOwner'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder setMissionOwner(java.lang.String value) {
      validate(fields()[8], value);
      this.missionOwner = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'missionOwner' field has been set.
      * Company or person that owns the mission
      * @return True if the 'missionOwner' field has been set, false otherwise.
      */
    public boolean hasMissionOwner() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'missionOwner' field.
      * Company or person that owns the mission
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgRegisterUserOld.Builder clearMissionOwner() {
      missionOwner = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public MsgRegisterUserOld build() {
      try {
        MsgRegisterUserOld record = new MsgRegisterUserOld();
        record.firstName = fieldSetFlags()[0] ? this.firstName : (java.lang.String) defaultValue(fields()[0]);
        record.lastName = fieldSetFlags()[1] ? this.lastName : (java.lang.String) defaultValue(fields()[1]);
        record.userName = fieldSetFlags()[2] ? this.userName : (java.lang.String) defaultValue(fields()[2]);
        record.hashPassword = fieldSetFlags()[3] ? this.hashPassword : (java.lang.String) defaultValue(fields()[3]);
        record.emailAddress = fieldSetFlags()[4] ? this.emailAddress : (java.lang.String) defaultValue(fields()[4]);
        record.missionName = fieldSetFlags()[5] ? this.missionName : (java.lang.String) defaultValue(fields()[5]);
        record.missionDescription = fieldSetFlags()[6] ? this.missionDescription : (java.lang.String) defaultValue(fields()[6]);
        record.missionCountry = fieldSetFlags()[7] ? this.missionCountry : (java.lang.String) defaultValue(fields()[7]);
        record.missionOwner = fieldSetFlags()[8] ? this.missionOwner : (java.lang.String) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
