/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.incomplete.cubegs.common.avro.messages;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** This message adds a new Subsystem to a Satellite. It returns a Subsystem object */
@org.apache.avro.specific.AvroGenerated
public class MsgAddSubsystem extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5823603173151788819L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MsgAddSubsystem\",\"namespace\":\"com.incomplete.cubegs.common.avro.messages\",\"doc\":\"This message adds a new Subsystem to a Satellite. It returns a Subsystem object\",\"fields\":[{\"name\":\"authorizationToken\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Authorization token\"},{\"name\":\"satelliteName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Satellite identifier\"},{\"name\":\"subsystem\",\"type\":{\"type\":\"record\",\"name\":\"Subsystem\",\"doc\":\"This record contains the definition of a subsystem\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Subsystem name\"},{\"name\":\"description\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Description of the Subsystem\"},{\"name\":\"satelliteName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Satellite name\"}]},\"doc\":\"New Subsystem object\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Authorization token */
  @Deprecated public java.lang.String authorizationToken;
  /** Satellite identifier */
  @Deprecated public java.lang.String satelliteName;
  /** New Subsystem object */
  @Deprecated public com.incomplete.cubegs.common.avro.messages.Subsystem subsystem;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MsgAddSubsystem() {}

  /**
   * All-args constructor.
   * @param authorizationToken Authorization token
   * @param satelliteName Satellite identifier
   * @param subsystem New Subsystem object
   */
  public MsgAddSubsystem(java.lang.String authorizationToken, java.lang.String satelliteName, com.incomplete.cubegs.common.avro.messages.Subsystem subsystem) {
    this.authorizationToken = authorizationToken;
    this.satelliteName = satelliteName;
    this.subsystem = subsystem;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return authorizationToken;
    case 1: return satelliteName;
    case 2: return subsystem;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: authorizationToken = (java.lang.String)value$; break;
    case 1: satelliteName = (java.lang.String)value$; break;
    case 2: subsystem = (com.incomplete.cubegs.common.avro.messages.Subsystem)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'authorizationToken' field.
   * @return Authorization token
   */
  public java.lang.String getAuthorizationToken() {
    return authorizationToken;
  }

  /**
   * Sets the value of the 'authorizationToken' field.
   * Authorization token
   * @param value the value to set.
   */
  public void setAuthorizationToken(java.lang.String value) {
    this.authorizationToken = value;
  }

  /**
   * Gets the value of the 'satelliteName' field.
   * @return Satellite identifier
   */
  public java.lang.String getSatelliteName() {
    return satelliteName;
  }

  /**
   * Sets the value of the 'satelliteName' field.
   * Satellite identifier
   * @param value the value to set.
   */
  public void setSatelliteName(java.lang.String value) {
    this.satelliteName = value;
  }

  /**
   * Gets the value of the 'subsystem' field.
   * @return New Subsystem object
   */
  public com.incomplete.cubegs.common.avro.messages.Subsystem getSubsystem() {
    return subsystem;
  }

  /**
   * Sets the value of the 'subsystem' field.
   * New Subsystem object
   * @param value the value to set.
   */
  public void setSubsystem(com.incomplete.cubegs.common.avro.messages.Subsystem value) {
    this.subsystem = value;
  }

  /**
   * Creates a new MsgAddSubsystem RecordBuilder.
   * @return A new MsgAddSubsystem RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.MsgAddSubsystem.Builder newBuilder() {
    return new com.incomplete.cubegs.common.avro.messages.MsgAddSubsystem.Builder();
  }

  /**
   * Creates a new MsgAddSubsystem RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MsgAddSubsystem RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.MsgAddSubsystem.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.MsgAddSubsystem.Builder other) {
    return new com.incomplete.cubegs.common.avro.messages.MsgAddSubsystem.Builder(other);
  }

  /**
   * Creates a new MsgAddSubsystem RecordBuilder by copying an existing MsgAddSubsystem instance.
   * @param other The existing instance to copy.
   * @return A new MsgAddSubsystem RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.MsgAddSubsystem.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.MsgAddSubsystem other) {
    return new com.incomplete.cubegs.common.avro.messages.MsgAddSubsystem.Builder(other);
  }

  /**
   * RecordBuilder for MsgAddSubsystem instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MsgAddSubsystem>
    implements org.apache.avro.data.RecordBuilder<MsgAddSubsystem> {

    /** Authorization token */
    private java.lang.String authorizationToken;
    /** Satellite identifier */
    private java.lang.String satelliteName;
    /** New Subsystem object */
    private com.incomplete.cubegs.common.avro.messages.Subsystem subsystem;
    private com.incomplete.cubegs.common.avro.messages.Subsystem.Builder subsystemBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.MsgAddSubsystem.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.authorizationToken)) {
        this.authorizationToken = data().deepCopy(fields()[0].schema(), other.authorizationToken);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.satelliteName)) {
        this.satelliteName = data().deepCopy(fields()[1].schema(), other.satelliteName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.subsystem)) {
        this.subsystem = data().deepCopy(fields()[2].schema(), other.subsystem);
        fieldSetFlags()[2] = true;
      }
      if (other.hasSubsystemBuilder()) {
        this.subsystemBuilder = com.incomplete.cubegs.common.avro.messages.Subsystem.newBuilder(other.getSubsystemBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing MsgAddSubsystem instance
     * @param other The existing instance to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.MsgAddSubsystem other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.authorizationToken)) {
        this.authorizationToken = data().deepCopy(fields()[0].schema(), other.authorizationToken);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.satelliteName)) {
        this.satelliteName = data().deepCopy(fields()[1].schema(), other.satelliteName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.subsystem)) {
        this.subsystem = data().deepCopy(fields()[2].schema(), other.subsystem);
        fieldSetFlags()[2] = true;
      }
      this.subsystemBuilder = null;
    }

    /**
      * Gets the value of the 'authorizationToken' field.
      * Authorization token
      * @return The value.
      */
    public java.lang.String getAuthorizationToken() {
      return authorizationToken;
    }

    /**
      * Sets the value of the 'authorizationToken' field.
      * Authorization token
      * @param value The value of 'authorizationToken'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgAddSubsystem.Builder setAuthorizationToken(java.lang.String value) {
      validate(fields()[0], value);
      this.authorizationToken = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'authorizationToken' field has been set.
      * Authorization token
      * @return True if the 'authorizationToken' field has been set, false otherwise.
      */
    public boolean hasAuthorizationToken() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'authorizationToken' field.
      * Authorization token
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgAddSubsystem.Builder clearAuthorizationToken() {
      authorizationToken = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'satelliteName' field.
      * Satellite identifier
      * @return The value.
      */
    public java.lang.String getSatelliteName() {
      return satelliteName;
    }

    /**
      * Sets the value of the 'satelliteName' field.
      * Satellite identifier
      * @param value The value of 'satelliteName'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgAddSubsystem.Builder setSatelliteName(java.lang.String value) {
      validate(fields()[1], value);
      this.satelliteName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'satelliteName' field has been set.
      * Satellite identifier
      * @return True if the 'satelliteName' field has been set, false otherwise.
      */
    public boolean hasSatelliteName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'satelliteName' field.
      * Satellite identifier
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgAddSubsystem.Builder clearSatelliteName() {
      satelliteName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'subsystem' field.
      * New Subsystem object
      * @return The value.
      */
    public com.incomplete.cubegs.common.avro.messages.Subsystem getSubsystem() {
      return subsystem;
    }

    /**
      * Sets the value of the 'subsystem' field.
      * New Subsystem object
      * @param value The value of 'subsystem'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgAddSubsystem.Builder setSubsystem(com.incomplete.cubegs.common.avro.messages.Subsystem value) {
      validate(fields()[2], value);
      this.subsystemBuilder = null;
      this.subsystem = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'subsystem' field has been set.
      * New Subsystem object
      * @return True if the 'subsystem' field has been set, false otherwise.
      */
    public boolean hasSubsystem() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'subsystem' field and creates one if it doesn't exist yet.
     * New Subsystem object
     * @return This builder.
     */
    public com.incomplete.cubegs.common.avro.messages.Subsystem.Builder getSubsystemBuilder() {
      if (subsystemBuilder == null) {
        if (hasSubsystem()) {
          setSubsystemBuilder(com.incomplete.cubegs.common.avro.messages.Subsystem.newBuilder(subsystem));
        } else {
          setSubsystemBuilder(com.incomplete.cubegs.common.avro.messages.Subsystem.newBuilder());
        }
      }
      return subsystemBuilder;
    }

    /**
     * Sets the Builder instance for the 'subsystem' field
     * New Subsystem object
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.incomplete.cubegs.common.avro.messages.MsgAddSubsystem.Builder setSubsystemBuilder(com.incomplete.cubegs.common.avro.messages.Subsystem.Builder value) {
      clearSubsystem();
      subsystemBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'subsystem' field has an active Builder instance
     * New Subsystem object
     * @return True if the 'subsystem' field has an active Builder instance
     */
    public boolean hasSubsystemBuilder() {
      return subsystemBuilder != null;
    }

    /**
      * Clears the value of the 'subsystem' field.
      * New Subsystem object
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgAddSubsystem.Builder clearSubsystem() {
      subsystem = null;
      subsystemBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public MsgAddSubsystem build() {
      try {
        MsgAddSubsystem record = new MsgAddSubsystem();
        record.authorizationToken = fieldSetFlags()[0] ? this.authorizationToken : (java.lang.String) defaultValue(fields()[0]);
        record.satelliteName = fieldSetFlags()[1] ? this.satelliteName : (java.lang.String) defaultValue(fields()[1]);
        if (subsystemBuilder != null) {
          record.subsystem = this.subsystemBuilder.build();
        } else {
          record.subsystem = fieldSetFlags()[2] ? this.subsystem : (com.incomplete.cubegs.common.avro.messages.Subsystem) defaultValue(fields()[2]);
        }
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
