/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.incomplete.cubegs.common.avro.messages;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** It defines the stages of veritying a TC */
@org.apache.avro.specific.AvroGenerated
public class TC_ParameterVerifier extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5237023640001220782L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TC_ParameterVerifier\",\"namespace\":\"com.incomplete.cubegs.common.avro.messages\",\"doc\":\"It defines the stages of veritying a TC\",\"fields\":[{\"name\":\"tcName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"TC name\"},{\"name\":\"tcStage\",\"type\":{\"type\":\"enum\",\"name\":\"TcStageEnum\",\"symbols\":[\"TC_STAGE_TRANSFERRED\",\"TC_STAGE_SENT\",\"TC_STAGE_RECEIVED\",\"TC_STAGE_ACCEPTED\",\"TC_STAGE_QUEUED\",\"TC_STAGE_EXECUTION\",\"TC_STAGE_COMPLETED\",\"TC_STAGE_FAILED\"]},\"doc\":\"Any stage is accepted\"},{\"name\":\"verifierType\",\"type\":\"int\",\"doc\":\"Type of verifier\"},{\"name\":\"verifierText\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Text of verifier\"},{\"name\":\"startTimeCheckWindow\",\"type\":\"int\",\"doc\":\"Start time of the window in milliseconds\"},{\"name\":\"stopTimeCheckWindow\",\"type\":\"int\",\"doc\":\"Stop time of the window in milliseconds\"},{\"name\":\"checkWindow\",\"type\":\"int\",\"doc\":\"Check window\"},{\"name\":\"onSuccess\",\"type\":\"int\",\"doc\":\"Defines what happens when the verification returns true\"},{\"name\":\"onFail\",\"type\":\"int\",\"doc\":\"Same like OnSuccess but the event is generated in case the verifier returns false\"},{\"name\":\"onTimeout\",\"type\":\"int\",\"doc\":\"Defines what happens when the verification returns true\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** TC name */
  @Deprecated public java.lang.String tcName;
  /** Any stage is accepted */
  @Deprecated public com.incomplete.cubegs.common.avro.messages.TcStageEnum tcStage;
  /** Type of verifier */
  @Deprecated public int verifierType;
  /** Text of verifier */
  @Deprecated public java.lang.String verifierText;
  /** Start time of the window in milliseconds */
  @Deprecated public int startTimeCheckWindow;
  /** Stop time of the window in milliseconds */
  @Deprecated public int stopTimeCheckWindow;
  /** Check window */
  @Deprecated public int checkWindow;
  /** Defines what happens when the verification returns true */
  @Deprecated public int onSuccess;
  /** Same like OnSuccess but the event is generated in case the verifier returns false */
  @Deprecated public int onFail;
  /** Defines what happens when the verification returns true */
  @Deprecated public int onTimeout;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TC_ParameterVerifier() {}

  /**
   * All-args constructor.
   * @param tcName TC name
   * @param tcStage Any stage is accepted
   * @param verifierType Type of verifier
   * @param verifierText Text of verifier
   * @param startTimeCheckWindow Start time of the window in milliseconds
   * @param stopTimeCheckWindow Stop time of the window in milliseconds
   * @param checkWindow Check window
   * @param onSuccess Defines what happens when the verification returns true
   * @param onFail Same like OnSuccess but the event is generated in case the verifier returns false
   * @param onTimeout Defines what happens when the verification returns true
   */
  public TC_ParameterVerifier(java.lang.String tcName, com.incomplete.cubegs.common.avro.messages.TcStageEnum tcStage, java.lang.Integer verifierType, java.lang.String verifierText, java.lang.Integer startTimeCheckWindow, java.lang.Integer stopTimeCheckWindow, java.lang.Integer checkWindow, java.lang.Integer onSuccess, java.lang.Integer onFail, java.lang.Integer onTimeout) {
    this.tcName = tcName;
    this.tcStage = tcStage;
    this.verifierType = verifierType;
    this.verifierText = verifierText;
    this.startTimeCheckWindow = startTimeCheckWindow;
    this.stopTimeCheckWindow = stopTimeCheckWindow;
    this.checkWindow = checkWindow;
    this.onSuccess = onSuccess;
    this.onFail = onFail;
    this.onTimeout = onTimeout;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return tcName;
    case 1: return tcStage;
    case 2: return verifierType;
    case 3: return verifierText;
    case 4: return startTimeCheckWindow;
    case 5: return stopTimeCheckWindow;
    case 6: return checkWindow;
    case 7: return onSuccess;
    case 8: return onFail;
    case 9: return onTimeout;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: tcName = (java.lang.String)value$; break;
    case 1: tcStage = (com.incomplete.cubegs.common.avro.messages.TcStageEnum)value$; break;
    case 2: verifierType = (java.lang.Integer)value$; break;
    case 3: verifierText = (java.lang.String)value$; break;
    case 4: startTimeCheckWindow = (java.lang.Integer)value$; break;
    case 5: stopTimeCheckWindow = (java.lang.Integer)value$; break;
    case 6: checkWindow = (java.lang.Integer)value$; break;
    case 7: onSuccess = (java.lang.Integer)value$; break;
    case 8: onFail = (java.lang.Integer)value$; break;
    case 9: onTimeout = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'tcName' field.
   * @return TC name
   */
  public java.lang.String getTcName() {
    return tcName;
  }

  /**
   * Sets the value of the 'tcName' field.
   * TC name
   * @param value the value to set.
   */
  public void setTcName(java.lang.String value) {
    this.tcName = value;
  }

  /**
   * Gets the value of the 'tcStage' field.
   * @return Any stage is accepted
   */
  public com.incomplete.cubegs.common.avro.messages.TcStageEnum getTcStage() {
    return tcStage;
  }

  /**
   * Sets the value of the 'tcStage' field.
   * Any stage is accepted
   * @param value the value to set.
   */
  public void setTcStage(com.incomplete.cubegs.common.avro.messages.TcStageEnum value) {
    this.tcStage = value;
  }

  /**
   * Gets the value of the 'verifierType' field.
   * @return Type of verifier
   */
  public java.lang.Integer getVerifierType() {
    return verifierType;
  }

  /**
   * Sets the value of the 'verifierType' field.
   * Type of verifier
   * @param value the value to set.
   */
  public void setVerifierType(java.lang.Integer value) {
    this.verifierType = value;
  }

  /**
   * Gets the value of the 'verifierText' field.
   * @return Text of verifier
   */
  public java.lang.String getVerifierText() {
    return verifierText;
  }

  /**
   * Sets the value of the 'verifierText' field.
   * Text of verifier
   * @param value the value to set.
   */
  public void setVerifierText(java.lang.String value) {
    this.verifierText = value;
  }

  /**
   * Gets the value of the 'startTimeCheckWindow' field.
   * @return Start time of the window in milliseconds
   */
  public java.lang.Integer getStartTimeCheckWindow() {
    return startTimeCheckWindow;
  }

  /**
   * Sets the value of the 'startTimeCheckWindow' field.
   * Start time of the window in milliseconds
   * @param value the value to set.
   */
  public void setStartTimeCheckWindow(java.lang.Integer value) {
    this.startTimeCheckWindow = value;
  }

  /**
   * Gets the value of the 'stopTimeCheckWindow' field.
   * @return Stop time of the window in milliseconds
   */
  public java.lang.Integer getStopTimeCheckWindow() {
    return stopTimeCheckWindow;
  }

  /**
   * Sets the value of the 'stopTimeCheckWindow' field.
   * Stop time of the window in milliseconds
   * @param value the value to set.
   */
  public void setStopTimeCheckWindow(java.lang.Integer value) {
    this.stopTimeCheckWindow = value;
  }

  /**
   * Gets the value of the 'checkWindow' field.
   * @return Check window
   */
  public java.lang.Integer getCheckWindow() {
    return checkWindow;
  }

  /**
   * Sets the value of the 'checkWindow' field.
   * Check window
   * @param value the value to set.
   */
  public void setCheckWindow(java.lang.Integer value) {
    this.checkWindow = value;
  }

  /**
   * Gets the value of the 'onSuccess' field.
   * @return Defines what happens when the verification returns true
   */
  public java.lang.Integer getOnSuccess() {
    return onSuccess;
  }

  /**
   * Sets the value of the 'onSuccess' field.
   * Defines what happens when the verification returns true
   * @param value the value to set.
   */
  public void setOnSuccess(java.lang.Integer value) {
    this.onSuccess = value;
  }

  /**
   * Gets the value of the 'onFail' field.
   * @return Same like OnSuccess but the event is generated in case the verifier returns false
   */
  public java.lang.Integer getOnFail() {
    return onFail;
  }

  /**
   * Sets the value of the 'onFail' field.
   * Same like OnSuccess but the event is generated in case the verifier returns false
   * @param value the value to set.
   */
  public void setOnFail(java.lang.Integer value) {
    this.onFail = value;
  }

  /**
   * Gets the value of the 'onTimeout' field.
   * @return Defines what happens when the verification returns true
   */
  public java.lang.Integer getOnTimeout() {
    return onTimeout;
  }

  /**
   * Sets the value of the 'onTimeout' field.
   * Defines what happens when the verification returns true
   * @param value the value to set.
   */
  public void setOnTimeout(java.lang.Integer value) {
    this.onTimeout = value;
  }

  /**
   * Creates a new TC_ParameterVerifier RecordBuilder.
   * @return A new TC_ParameterVerifier RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder newBuilder() {
    return new com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder();
  }

  /**
   * Creates a new TC_ParameterVerifier RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TC_ParameterVerifier RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder other) {
    return new com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder(other);
  }

  /**
   * Creates a new TC_ParameterVerifier RecordBuilder by copying an existing TC_ParameterVerifier instance.
   * @param other The existing instance to copy.
   * @return A new TC_ParameterVerifier RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier other) {
    return new com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder(other);
  }

  /**
   * RecordBuilder for TC_ParameterVerifier instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TC_ParameterVerifier>
    implements org.apache.avro.data.RecordBuilder<TC_ParameterVerifier> {

    /** TC name */
    private java.lang.String tcName;
    /** Any stage is accepted */
    private com.incomplete.cubegs.common.avro.messages.TcStageEnum tcStage;
    /** Type of verifier */
    private int verifierType;
    /** Text of verifier */
    private java.lang.String verifierText;
    /** Start time of the window in milliseconds */
    private int startTimeCheckWindow;
    /** Stop time of the window in milliseconds */
    private int stopTimeCheckWindow;
    /** Check window */
    private int checkWindow;
    /** Defines what happens when the verification returns true */
    private int onSuccess;
    /** Same like OnSuccess but the event is generated in case the verifier returns false */
    private int onFail;
    /** Defines what happens when the verification returns true */
    private int onTimeout;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.tcName)) {
        this.tcName = data().deepCopy(fields()[0].schema(), other.tcName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.tcStage)) {
        this.tcStage = data().deepCopy(fields()[1].schema(), other.tcStage);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.verifierType)) {
        this.verifierType = data().deepCopy(fields()[2].schema(), other.verifierType);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.verifierText)) {
        this.verifierText = data().deepCopy(fields()[3].schema(), other.verifierText);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.startTimeCheckWindow)) {
        this.startTimeCheckWindow = data().deepCopy(fields()[4].schema(), other.startTimeCheckWindow);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.stopTimeCheckWindow)) {
        this.stopTimeCheckWindow = data().deepCopy(fields()[5].schema(), other.stopTimeCheckWindow);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.checkWindow)) {
        this.checkWindow = data().deepCopy(fields()[6].schema(), other.checkWindow);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.onSuccess)) {
        this.onSuccess = data().deepCopy(fields()[7].schema(), other.onSuccess);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.onFail)) {
        this.onFail = data().deepCopy(fields()[8].schema(), other.onFail);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.onTimeout)) {
        this.onTimeout = data().deepCopy(fields()[9].schema(), other.onTimeout);
        fieldSetFlags()[9] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing TC_ParameterVerifier instance
     * @param other The existing instance to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.tcName)) {
        this.tcName = data().deepCopy(fields()[0].schema(), other.tcName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.tcStage)) {
        this.tcStage = data().deepCopy(fields()[1].schema(), other.tcStage);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.verifierType)) {
        this.verifierType = data().deepCopy(fields()[2].schema(), other.verifierType);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.verifierText)) {
        this.verifierText = data().deepCopy(fields()[3].schema(), other.verifierText);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.startTimeCheckWindow)) {
        this.startTimeCheckWindow = data().deepCopy(fields()[4].schema(), other.startTimeCheckWindow);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.stopTimeCheckWindow)) {
        this.stopTimeCheckWindow = data().deepCopy(fields()[5].schema(), other.stopTimeCheckWindow);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.checkWindow)) {
        this.checkWindow = data().deepCopy(fields()[6].schema(), other.checkWindow);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.onSuccess)) {
        this.onSuccess = data().deepCopy(fields()[7].schema(), other.onSuccess);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.onFail)) {
        this.onFail = data().deepCopy(fields()[8].schema(), other.onFail);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.onTimeout)) {
        this.onTimeout = data().deepCopy(fields()[9].schema(), other.onTimeout);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'tcName' field.
      * TC name
      * @return The value.
      */
    public java.lang.String getTcName() {
      return tcName;
    }

    /**
      * Sets the value of the 'tcName' field.
      * TC name
      * @param value The value of 'tcName'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder setTcName(java.lang.String value) {
      validate(fields()[0], value);
      this.tcName = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'tcName' field has been set.
      * TC name
      * @return True if the 'tcName' field has been set, false otherwise.
      */
    public boolean hasTcName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'tcName' field.
      * TC name
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder clearTcName() {
      tcName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'tcStage' field.
      * Any stage is accepted
      * @return The value.
      */
    public com.incomplete.cubegs.common.avro.messages.TcStageEnum getTcStage() {
      return tcStage;
    }

    /**
      * Sets the value of the 'tcStage' field.
      * Any stage is accepted
      * @param value The value of 'tcStage'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder setTcStage(com.incomplete.cubegs.common.avro.messages.TcStageEnum value) {
      validate(fields()[1], value);
      this.tcStage = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'tcStage' field has been set.
      * Any stage is accepted
      * @return True if the 'tcStage' field has been set, false otherwise.
      */
    public boolean hasTcStage() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'tcStage' field.
      * Any stage is accepted
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder clearTcStage() {
      tcStage = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'verifierType' field.
      * Type of verifier
      * @return The value.
      */
    public java.lang.Integer getVerifierType() {
      return verifierType;
    }

    /**
      * Sets the value of the 'verifierType' field.
      * Type of verifier
      * @param value The value of 'verifierType'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder setVerifierType(int value) {
      validate(fields()[2], value);
      this.verifierType = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'verifierType' field has been set.
      * Type of verifier
      * @return True if the 'verifierType' field has been set, false otherwise.
      */
    public boolean hasVerifierType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'verifierType' field.
      * Type of verifier
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder clearVerifierType() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'verifierText' field.
      * Text of verifier
      * @return The value.
      */
    public java.lang.String getVerifierText() {
      return verifierText;
    }

    /**
      * Sets the value of the 'verifierText' field.
      * Text of verifier
      * @param value The value of 'verifierText'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder setVerifierText(java.lang.String value) {
      validate(fields()[3], value);
      this.verifierText = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'verifierText' field has been set.
      * Text of verifier
      * @return True if the 'verifierText' field has been set, false otherwise.
      */
    public boolean hasVerifierText() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'verifierText' field.
      * Text of verifier
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder clearVerifierText() {
      verifierText = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'startTimeCheckWindow' field.
      * Start time of the window in milliseconds
      * @return The value.
      */
    public java.lang.Integer getStartTimeCheckWindow() {
      return startTimeCheckWindow;
    }

    /**
      * Sets the value of the 'startTimeCheckWindow' field.
      * Start time of the window in milliseconds
      * @param value The value of 'startTimeCheckWindow'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder setStartTimeCheckWindow(int value) {
      validate(fields()[4], value);
      this.startTimeCheckWindow = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'startTimeCheckWindow' field has been set.
      * Start time of the window in milliseconds
      * @return True if the 'startTimeCheckWindow' field has been set, false otherwise.
      */
    public boolean hasStartTimeCheckWindow() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'startTimeCheckWindow' field.
      * Start time of the window in milliseconds
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder clearStartTimeCheckWindow() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'stopTimeCheckWindow' field.
      * Stop time of the window in milliseconds
      * @return The value.
      */
    public java.lang.Integer getStopTimeCheckWindow() {
      return stopTimeCheckWindow;
    }

    /**
      * Sets the value of the 'stopTimeCheckWindow' field.
      * Stop time of the window in milliseconds
      * @param value The value of 'stopTimeCheckWindow'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder setStopTimeCheckWindow(int value) {
      validate(fields()[5], value);
      this.stopTimeCheckWindow = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'stopTimeCheckWindow' field has been set.
      * Stop time of the window in milliseconds
      * @return True if the 'stopTimeCheckWindow' field has been set, false otherwise.
      */
    public boolean hasStopTimeCheckWindow() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'stopTimeCheckWindow' field.
      * Stop time of the window in milliseconds
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder clearStopTimeCheckWindow() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'checkWindow' field.
      * Check window
      * @return The value.
      */
    public java.lang.Integer getCheckWindow() {
      return checkWindow;
    }

    /**
      * Sets the value of the 'checkWindow' field.
      * Check window
      * @param value The value of 'checkWindow'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder setCheckWindow(int value) {
      validate(fields()[6], value);
      this.checkWindow = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'checkWindow' field has been set.
      * Check window
      * @return True if the 'checkWindow' field has been set, false otherwise.
      */
    public boolean hasCheckWindow() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'checkWindow' field.
      * Check window
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder clearCheckWindow() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'onSuccess' field.
      * Defines what happens when the verification returns true
      * @return The value.
      */
    public java.lang.Integer getOnSuccess() {
      return onSuccess;
    }

    /**
      * Sets the value of the 'onSuccess' field.
      * Defines what happens when the verification returns true
      * @param value The value of 'onSuccess'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder setOnSuccess(int value) {
      validate(fields()[7], value);
      this.onSuccess = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'onSuccess' field has been set.
      * Defines what happens when the verification returns true
      * @return True if the 'onSuccess' field has been set, false otherwise.
      */
    public boolean hasOnSuccess() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'onSuccess' field.
      * Defines what happens when the verification returns true
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder clearOnSuccess() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'onFail' field.
      * Same like OnSuccess but the event is generated in case the verifier returns false
      * @return The value.
      */
    public java.lang.Integer getOnFail() {
      return onFail;
    }

    /**
      * Sets the value of the 'onFail' field.
      * Same like OnSuccess but the event is generated in case the verifier returns false
      * @param value The value of 'onFail'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder setOnFail(int value) {
      validate(fields()[8], value);
      this.onFail = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'onFail' field has been set.
      * Same like OnSuccess but the event is generated in case the verifier returns false
      * @return True if the 'onFail' field has been set, false otherwise.
      */
    public boolean hasOnFail() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'onFail' field.
      * Same like OnSuccess but the event is generated in case the verifier returns false
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder clearOnFail() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'onTimeout' field.
      * Defines what happens when the verification returns true
      * @return The value.
      */
    public java.lang.Integer getOnTimeout() {
      return onTimeout;
    }

    /**
      * Sets the value of the 'onTimeout' field.
      * Defines what happens when the verification returns true
      * @param value The value of 'onTimeout'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder setOnTimeout(int value) {
      validate(fields()[9], value);
      this.onTimeout = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'onTimeout' field has been set.
      * Defines what happens when the verification returns true
      * @return True if the 'onTimeout' field has been set, false otherwise.
      */
    public boolean hasOnTimeout() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'onTimeout' field.
      * Defines what happens when the verification returns true
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterVerifier.Builder clearOnTimeout() {
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    public TC_ParameterVerifier build() {
      try {
        TC_ParameterVerifier record = new TC_ParameterVerifier();
        record.tcName = fieldSetFlags()[0] ? this.tcName : (java.lang.String) defaultValue(fields()[0]);
        record.tcStage = fieldSetFlags()[1] ? this.tcStage : (com.incomplete.cubegs.common.avro.messages.TcStageEnum) defaultValue(fields()[1]);
        record.verifierType = fieldSetFlags()[2] ? this.verifierType : (java.lang.Integer) defaultValue(fields()[2]);
        record.verifierText = fieldSetFlags()[3] ? this.verifierText : (java.lang.String) defaultValue(fields()[3]);
        record.startTimeCheckWindow = fieldSetFlags()[4] ? this.startTimeCheckWindow : (java.lang.Integer) defaultValue(fields()[4]);
        record.stopTimeCheckWindow = fieldSetFlags()[5] ? this.stopTimeCheckWindow : (java.lang.Integer) defaultValue(fields()[5]);
        record.checkWindow = fieldSetFlags()[6] ? this.checkWindow : (java.lang.Integer) defaultValue(fields()[6]);
        record.onSuccess = fieldSetFlags()[7] ? this.onSuccess : (java.lang.Integer) defaultValue(fields()[7]);
        record.onFail = fieldSetFlags()[8] ? this.onFail : (java.lang.Integer) defaultValue(fields()[8]);
        record.onTimeout = fieldSetFlags()[9] ? this.onTimeout : (java.lang.Integer) defaultValue(fields()[9]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
