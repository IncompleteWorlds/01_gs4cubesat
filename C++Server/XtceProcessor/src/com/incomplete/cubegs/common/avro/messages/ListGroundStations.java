/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.incomplete.cubegs.common.avro.messages;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** This record contains a list of Ground Stations */
@org.apache.avro.specific.AvroGenerated
public class ListGroundStations extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1498406189616639685L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ListGroundStations\",\"namespace\":\"com.incomplete.cubegs.common.avro.messages\",\"doc\":\"This record contains a list of Ground Stations\",\"fields\":[{\"name\":\"numberGroundStations\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Number of ground stations in the list\"},{\"name\":\"listGroundStations\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GroundStation\",\"doc\":\"This record contains the ground station parameters\",\"fields\":[{\"name\":\"identifier\",\"type\":\"int\",\"doc\":\"Unique identifier of the ground station\"},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Ground station name\"},{\"name\":\"description\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Description of the station\"},{\"name\":\"code\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Short code of the station. I.e. SVB\"},{\"name\":\"owner\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Company / entity that owns the ground station\"},{\"name\":\"latitude\",\"type\":\"float\",\"doc\":\"Latitude of the station. Decimal degree. North\"},{\"name\":\"longitude\",\"type\":\"float\",\"doc\":\"Longitude of the station. Decimal degree. East\"},{\"name\":\"altitude\",\"type\":\"float\",\"doc\":\"Altitude over the sea of the station. Meters\"},{\"name\":\"connectionType\",\"type\":{\"type\":\"enum\",\"name\":\"ConnectionTypeEnum\",\"symbols\":[\"NONE\",\"TCP\",\"SERIAL\",\"USB\"]},\"doc\":\"Connection type. Enum; NONE, TCP, SERIAL, USB\"},{\"name\":\"url\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"URL of the ground station. Tcp connections\"},{\"name\":\"port\",\"type\":\"int\",\"doc\":\"IP port of the GS. Tcp connections\"},{\"name\":\"comPort\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Serial com port of the GS\"},{\"name\":\"speed\",\"type\":\"float\",\"doc\":\"Serial speed of the serial link with GS\"},{\"name\":\"parity\",\"type\":\"float\",\"doc\":\"Serial parity of the serial link with GS\"},{\"name\":\"controlBits\",\"type\":\"float\",\"doc\":\"Control bits of the serial link\"}]}},\"doc\":\"List of ground stations\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Number of ground stations in the list */
  @Deprecated public java.lang.String numberGroundStations;
  /** List of ground stations */
  @Deprecated public java.util.List<com.incomplete.cubegs.common.avro.messages.GroundStation> listGroundStations;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ListGroundStations() {}

  /**
   * All-args constructor.
   * @param numberGroundStations Number of ground stations in the list
   * @param listGroundStations List of ground stations
   */
  public ListGroundStations(java.lang.String numberGroundStations, java.util.List<com.incomplete.cubegs.common.avro.messages.GroundStation> listGroundStations) {
    this.numberGroundStations = numberGroundStations;
    this.listGroundStations = listGroundStations;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return numberGroundStations;
    case 1: return listGroundStations;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: numberGroundStations = (java.lang.String)value$; break;
    case 1: listGroundStations = (java.util.List<com.incomplete.cubegs.common.avro.messages.GroundStation>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'numberGroundStations' field.
   * @return Number of ground stations in the list
   */
  public java.lang.String getNumberGroundStations() {
    return numberGroundStations;
  }

  /**
   * Sets the value of the 'numberGroundStations' field.
   * Number of ground stations in the list
   * @param value the value to set.
   */
  public void setNumberGroundStations(java.lang.String value) {
    this.numberGroundStations = value;
  }

  /**
   * Gets the value of the 'listGroundStations' field.
   * @return List of ground stations
   */
  public java.util.List<com.incomplete.cubegs.common.avro.messages.GroundStation> getListGroundStations() {
    return listGroundStations;
  }

  /**
   * Sets the value of the 'listGroundStations' field.
   * List of ground stations
   * @param value the value to set.
   */
  public void setListGroundStations(java.util.List<com.incomplete.cubegs.common.avro.messages.GroundStation> value) {
    this.listGroundStations = value;
  }

  /**
   * Creates a new ListGroundStations RecordBuilder.
   * @return A new ListGroundStations RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.ListGroundStations.Builder newBuilder() {
    return new com.incomplete.cubegs.common.avro.messages.ListGroundStations.Builder();
  }

  /**
   * Creates a new ListGroundStations RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ListGroundStations RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.ListGroundStations.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.ListGroundStations.Builder other) {
    return new com.incomplete.cubegs.common.avro.messages.ListGroundStations.Builder(other);
  }

  /**
   * Creates a new ListGroundStations RecordBuilder by copying an existing ListGroundStations instance.
   * @param other The existing instance to copy.
   * @return A new ListGroundStations RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.ListGroundStations.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.ListGroundStations other) {
    return new com.incomplete.cubegs.common.avro.messages.ListGroundStations.Builder(other);
  }

  /**
   * RecordBuilder for ListGroundStations instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ListGroundStations>
    implements org.apache.avro.data.RecordBuilder<ListGroundStations> {

    /** Number of ground stations in the list */
    private java.lang.String numberGroundStations;
    /** List of ground stations */
    private java.util.List<com.incomplete.cubegs.common.avro.messages.GroundStation> listGroundStations;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.ListGroundStations.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.numberGroundStations)) {
        this.numberGroundStations = data().deepCopy(fields()[0].schema(), other.numberGroundStations);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.listGroundStations)) {
        this.listGroundStations = data().deepCopy(fields()[1].schema(), other.listGroundStations);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing ListGroundStations instance
     * @param other The existing instance to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.ListGroundStations other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.numberGroundStations)) {
        this.numberGroundStations = data().deepCopy(fields()[0].schema(), other.numberGroundStations);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.listGroundStations)) {
        this.listGroundStations = data().deepCopy(fields()[1].schema(), other.listGroundStations);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'numberGroundStations' field.
      * Number of ground stations in the list
      * @return The value.
      */
    public java.lang.String getNumberGroundStations() {
      return numberGroundStations;
    }

    /**
      * Sets the value of the 'numberGroundStations' field.
      * Number of ground stations in the list
      * @param value The value of 'numberGroundStations'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.ListGroundStations.Builder setNumberGroundStations(java.lang.String value) {
      validate(fields()[0], value);
      this.numberGroundStations = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'numberGroundStations' field has been set.
      * Number of ground stations in the list
      * @return True if the 'numberGroundStations' field has been set, false otherwise.
      */
    public boolean hasNumberGroundStations() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'numberGroundStations' field.
      * Number of ground stations in the list
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.ListGroundStations.Builder clearNumberGroundStations() {
      numberGroundStations = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'listGroundStations' field.
      * List of ground stations
      * @return The value.
      */
    public java.util.List<com.incomplete.cubegs.common.avro.messages.GroundStation> getListGroundStations() {
      return listGroundStations;
    }

    /**
      * Sets the value of the 'listGroundStations' field.
      * List of ground stations
      * @param value The value of 'listGroundStations'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.ListGroundStations.Builder setListGroundStations(java.util.List<com.incomplete.cubegs.common.avro.messages.GroundStation> value) {
      validate(fields()[1], value);
      this.listGroundStations = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'listGroundStations' field has been set.
      * List of ground stations
      * @return True if the 'listGroundStations' field has been set, false otherwise.
      */
    public boolean hasListGroundStations() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'listGroundStations' field.
      * List of ground stations
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.ListGroundStations.Builder clearListGroundStations() {
      listGroundStations = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public ListGroundStations build() {
      try {
        ListGroundStations record = new ListGroundStations();
        record.numberGroundStations = fieldSetFlags()[0] ? this.numberGroundStations : (java.lang.String) defaultValue(fields()[0]);
        record.listGroundStations = fieldSetFlags()[1] ? this.listGroundStations : (java.util.List<com.incomplete.cubegs.common.avro.messages.GroundStation>) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
