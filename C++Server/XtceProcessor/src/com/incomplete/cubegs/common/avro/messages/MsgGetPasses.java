/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.incomplete.cubegs.common.avro.messages;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** This message retrieves the list of passes over a ground station during a period of time. It will return the list of passes */
@org.apache.avro.specific.AvroGenerated
public class MsgGetPasses extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3171453797118452756L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MsgGetPasses\",\"namespace\":\"com.incomplete.cubegs.common.avro.messages\",\"doc\":\"This message retrieves the list of passes over a ground station during a period of time. It will return the list of passes\",\"fields\":[{\"name\":\"authorizationToken\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Authorization token\"},{\"name\":\"userRole\",\"type\":\"int\",\"doc\":\"User role. Values: ROLE_READ_ONLY - 0 ROLE_NORMAL - 1 ROLE_ADMINISTRATOR - 2\"},{\"name\":\"missionId\",\"type\":\"int\",\"doc\":\"Mission identifier\"},{\"name\":\"satelliteId\",\"type\":\"int\",\"doc\":\"Satellite identifier\"},{\"name\":\"groundStationId\",\"type\":\"int\",\"doc\":\"Ground Station identifier\"},{\"name\":\"startTime\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Start time of time period. Format: YYYY-MM-DDTHH:mm:SS\"},{\"name\":\"stopTime\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Stop time of time period. Format: YYYY-MM-DDTHH:mm:SS\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Authorization token */
  @Deprecated public java.lang.String authorizationToken;
  /** User role. Values: ROLE_READ_ONLY - 0 ROLE_NORMAL - 1 ROLE_ADMINISTRATOR - 2 */
  @Deprecated public int userRole;
  /** Mission identifier */
  @Deprecated public int missionId;
  /** Satellite identifier */
  @Deprecated public int satelliteId;
  /** Ground Station identifier */
  @Deprecated public int groundStationId;
  /** Start time of time period. Format: YYYY-MM-DDTHH:mm:SS */
  @Deprecated public java.lang.String startTime;
  /** Stop time of time period. Format: YYYY-MM-DDTHH:mm:SS */
  @Deprecated public java.lang.String stopTime;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MsgGetPasses() {}

  /**
   * All-args constructor.
   * @param authorizationToken Authorization token
   * @param userRole User role. Values: ROLE_READ_ONLY - 0 ROLE_NORMAL - 1 ROLE_ADMINISTRATOR - 2
   * @param missionId Mission identifier
   * @param satelliteId Satellite identifier
   * @param groundStationId Ground Station identifier
   * @param startTime Start time of time period. Format: YYYY-MM-DDTHH:mm:SS
   * @param stopTime Stop time of time period. Format: YYYY-MM-DDTHH:mm:SS
   */
  public MsgGetPasses(java.lang.String authorizationToken, java.lang.Integer userRole, java.lang.Integer missionId, java.lang.Integer satelliteId, java.lang.Integer groundStationId, java.lang.String startTime, java.lang.String stopTime) {
    this.authorizationToken = authorizationToken;
    this.userRole = userRole;
    this.missionId = missionId;
    this.satelliteId = satelliteId;
    this.groundStationId = groundStationId;
    this.startTime = startTime;
    this.stopTime = stopTime;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return authorizationToken;
    case 1: return userRole;
    case 2: return missionId;
    case 3: return satelliteId;
    case 4: return groundStationId;
    case 5: return startTime;
    case 6: return stopTime;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: authorizationToken = (java.lang.String)value$; break;
    case 1: userRole = (java.lang.Integer)value$; break;
    case 2: missionId = (java.lang.Integer)value$; break;
    case 3: satelliteId = (java.lang.Integer)value$; break;
    case 4: groundStationId = (java.lang.Integer)value$; break;
    case 5: startTime = (java.lang.String)value$; break;
    case 6: stopTime = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'authorizationToken' field.
   * @return Authorization token
   */
  public java.lang.String getAuthorizationToken() {
    return authorizationToken;
  }

  /**
   * Sets the value of the 'authorizationToken' field.
   * Authorization token
   * @param value the value to set.
   */
  public void setAuthorizationToken(java.lang.String value) {
    this.authorizationToken = value;
  }

  /**
   * Gets the value of the 'userRole' field.
   * @return User role. Values: ROLE_READ_ONLY - 0 ROLE_NORMAL - 1 ROLE_ADMINISTRATOR - 2
   */
  public java.lang.Integer getUserRole() {
    return userRole;
  }

  /**
   * Sets the value of the 'userRole' field.
   * User role. Values: ROLE_READ_ONLY - 0 ROLE_NORMAL - 1 ROLE_ADMINISTRATOR - 2
   * @param value the value to set.
   */
  public void setUserRole(java.lang.Integer value) {
    this.userRole = value;
  }

  /**
   * Gets the value of the 'missionId' field.
   * @return Mission identifier
   */
  public java.lang.Integer getMissionId() {
    return missionId;
  }

  /**
   * Sets the value of the 'missionId' field.
   * Mission identifier
   * @param value the value to set.
   */
  public void setMissionId(java.lang.Integer value) {
    this.missionId = value;
  }

  /**
   * Gets the value of the 'satelliteId' field.
   * @return Satellite identifier
   */
  public java.lang.Integer getSatelliteId() {
    return satelliteId;
  }

  /**
   * Sets the value of the 'satelliteId' field.
   * Satellite identifier
   * @param value the value to set.
   */
  public void setSatelliteId(java.lang.Integer value) {
    this.satelliteId = value;
  }

  /**
   * Gets the value of the 'groundStationId' field.
   * @return Ground Station identifier
   */
  public java.lang.Integer getGroundStationId() {
    return groundStationId;
  }

  /**
   * Sets the value of the 'groundStationId' field.
   * Ground Station identifier
   * @param value the value to set.
   */
  public void setGroundStationId(java.lang.Integer value) {
    this.groundStationId = value;
  }

  /**
   * Gets the value of the 'startTime' field.
   * @return Start time of time period. Format: YYYY-MM-DDTHH:mm:SS
   */
  public java.lang.String getStartTime() {
    return startTime;
  }

  /**
   * Sets the value of the 'startTime' field.
   * Start time of time period. Format: YYYY-MM-DDTHH:mm:SS
   * @param value the value to set.
   */
  public void setStartTime(java.lang.String value) {
    this.startTime = value;
  }

  /**
   * Gets the value of the 'stopTime' field.
   * @return Stop time of time period. Format: YYYY-MM-DDTHH:mm:SS
   */
  public java.lang.String getStopTime() {
    return stopTime;
  }

  /**
   * Sets the value of the 'stopTime' field.
   * Stop time of time period. Format: YYYY-MM-DDTHH:mm:SS
   * @param value the value to set.
   */
  public void setStopTime(java.lang.String value) {
    this.stopTime = value;
  }

  /**
   * Creates a new MsgGetPasses RecordBuilder.
   * @return A new MsgGetPasses RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.MsgGetPasses.Builder newBuilder() {
    return new com.incomplete.cubegs.common.avro.messages.MsgGetPasses.Builder();
  }

  /**
   * Creates a new MsgGetPasses RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MsgGetPasses RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.MsgGetPasses.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.MsgGetPasses.Builder other) {
    return new com.incomplete.cubegs.common.avro.messages.MsgGetPasses.Builder(other);
  }

  /**
   * Creates a new MsgGetPasses RecordBuilder by copying an existing MsgGetPasses instance.
   * @param other The existing instance to copy.
   * @return A new MsgGetPasses RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.MsgGetPasses.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.MsgGetPasses other) {
    return new com.incomplete.cubegs.common.avro.messages.MsgGetPasses.Builder(other);
  }

  /**
   * RecordBuilder for MsgGetPasses instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MsgGetPasses>
    implements org.apache.avro.data.RecordBuilder<MsgGetPasses> {

    /** Authorization token */
    private java.lang.String authorizationToken;
    /** User role. Values: ROLE_READ_ONLY - 0 ROLE_NORMAL - 1 ROLE_ADMINISTRATOR - 2 */
    private int userRole;
    /** Mission identifier */
    private int missionId;
    /** Satellite identifier */
    private int satelliteId;
    /** Ground Station identifier */
    private int groundStationId;
    /** Start time of time period. Format: YYYY-MM-DDTHH:mm:SS */
    private java.lang.String startTime;
    /** Stop time of time period. Format: YYYY-MM-DDTHH:mm:SS */
    private java.lang.String stopTime;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.MsgGetPasses.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.authorizationToken)) {
        this.authorizationToken = data().deepCopy(fields()[0].schema(), other.authorizationToken);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.userRole)) {
        this.userRole = data().deepCopy(fields()[1].schema(), other.userRole);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.missionId)) {
        this.missionId = data().deepCopy(fields()[2].schema(), other.missionId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.satelliteId)) {
        this.satelliteId = data().deepCopy(fields()[3].schema(), other.satelliteId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.groundStationId)) {
        this.groundStationId = data().deepCopy(fields()[4].schema(), other.groundStationId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.startTime)) {
        this.startTime = data().deepCopy(fields()[5].schema(), other.startTime);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.stopTime)) {
        this.stopTime = data().deepCopy(fields()[6].schema(), other.stopTime);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing MsgGetPasses instance
     * @param other The existing instance to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.MsgGetPasses other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.authorizationToken)) {
        this.authorizationToken = data().deepCopy(fields()[0].schema(), other.authorizationToken);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.userRole)) {
        this.userRole = data().deepCopy(fields()[1].schema(), other.userRole);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.missionId)) {
        this.missionId = data().deepCopy(fields()[2].schema(), other.missionId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.satelliteId)) {
        this.satelliteId = data().deepCopy(fields()[3].schema(), other.satelliteId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.groundStationId)) {
        this.groundStationId = data().deepCopy(fields()[4].schema(), other.groundStationId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.startTime)) {
        this.startTime = data().deepCopy(fields()[5].schema(), other.startTime);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.stopTime)) {
        this.stopTime = data().deepCopy(fields()[6].schema(), other.stopTime);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'authorizationToken' field.
      * Authorization token
      * @return The value.
      */
    public java.lang.String getAuthorizationToken() {
      return authorizationToken;
    }

    /**
      * Sets the value of the 'authorizationToken' field.
      * Authorization token
      * @param value The value of 'authorizationToken'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgGetPasses.Builder setAuthorizationToken(java.lang.String value) {
      validate(fields()[0], value);
      this.authorizationToken = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'authorizationToken' field has been set.
      * Authorization token
      * @return True if the 'authorizationToken' field has been set, false otherwise.
      */
    public boolean hasAuthorizationToken() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'authorizationToken' field.
      * Authorization token
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgGetPasses.Builder clearAuthorizationToken() {
      authorizationToken = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'userRole' field.
      * User role. Values: ROLE_READ_ONLY - 0 ROLE_NORMAL - 1 ROLE_ADMINISTRATOR - 2
      * @return The value.
      */
    public java.lang.Integer getUserRole() {
      return userRole;
    }

    /**
      * Sets the value of the 'userRole' field.
      * User role. Values: ROLE_READ_ONLY - 0 ROLE_NORMAL - 1 ROLE_ADMINISTRATOR - 2
      * @param value The value of 'userRole'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgGetPasses.Builder setUserRole(int value) {
      validate(fields()[1], value);
      this.userRole = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'userRole' field has been set.
      * User role. Values: ROLE_READ_ONLY - 0 ROLE_NORMAL - 1 ROLE_ADMINISTRATOR - 2
      * @return True if the 'userRole' field has been set, false otherwise.
      */
    public boolean hasUserRole() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'userRole' field.
      * User role. Values: ROLE_READ_ONLY - 0 ROLE_NORMAL - 1 ROLE_ADMINISTRATOR - 2
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgGetPasses.Builder clearUserRole() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'missionId' field.
      * Mission identifier
      * @return The value.
      */
    public java.lang.Integer getMissionId() {
      return missionId;
    }

    /**
      * Sets the value of the 'missionId' field.
      * Mission identifier
      * @param value The value of 'missionId'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgGetPasses.Builder setMissionId(int value) {
      validate(fields()[2], value);
      this.missionId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'missionId' field has been set.
      * Mission identifier
      * @return True if the 'missionId' field has been set, false otherwise.
      */
    public boolean hasMissionId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'missionId' field.
      * Mission identifier
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgGetPasses.Builder clearMissionId() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'satelliteId' field.
      * Satellite identifier
      * @return The value.
      */
    public java.lang.Integer getSatelliteId() {
      return satelliteId;
    }

    /**
      * Sets the value of the 'satelliteId' field.
      * Satellite identifier
      * @param value The value of 'satelliteId'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgGetPasses.Builder setSatelliteId(int value) {
      validate(fields()[3], value);
      this.satelliteId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'satelliteId' field has been set.
      * Satellite identifier
      * @return True if the 'satelliteId' field has been set, false otherwise.
      */
    public boolean hasSatelliteId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'satelliteId' field.
      * Satellite identifier
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgGetPasses.Builder clearSatelliteId() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'groundStationId' field.
      * Ground Station identifier
      * @return The value.
      */
    public java.lang.Integer getGroundStationId() {
      return groundStationId;
    }

    /**
      * Sets the value of the 'groundStationId' field.
      * Ground Station identifier
      * @param value The value of 'groundStationId'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgGetPasses.Builder setGroundStationId(int value) {
      validate(fields()[4], value);
      this.groundStationId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'groundStationId' field has been set.
      * Ground Station identifier
      * @return True if the 'groundStationId' field has been set, false otherwise.
      */
    public boolean hasGroundStationId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'groundStationId' field.
      * Ground Station identifier
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgGetPasses.Builder clearGroundStationId() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'startTime' field.
      * Start time of time period. Format: YYYY-MM-DDTHH:mm:SS
      * @return The value.
      */
    public java.lang.String getStartTime() {
      return startTime;
    }

    /**
      * Sets the value of the 'startTime' field.
      * Start time of time period. Format: YYYY-MM-DDTHH:mm:SS
      * @param value The value of 'startTime'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgGetPasses.Builder setStartTime(java.lang.String value) {
      validate(fields()[5], value);
      this.startTime = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'startTime' field has been set.
      * Start time of time period. Format: YYYY-MM-DDTHH:mm:SS
      * @return True if the 'startTime' field has been set, false otherwise.
      */
    public boolean hasStartTime() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'startTime' field.
      * Start time of time period. Format: YYYY-MM-DDTHH:mm:SS
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgGetPasses.Builder clearStartTime() {
      startTime = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'stopTime' field.
      * Stop time of time period. Format: YYYY-MM-DDTHH:mm:SS
      * @return The value.
      */
    public java.lang.String getStopTime() {
      return stopTime;
    }

    /**
      * Sets the value of the 'stopTime' field.
      * Stop time of time period. Format: YYYY-MM-DDTHH:mm:SS
      * @param value The value of 'stopTime'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgGetPasses.Builder setStopTime(java.lang.String value) {
      validate(fields()[6], value);
      this.stopTime = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'stopTime' field has been set.
      * Stop time of time period. Format: YYYY-MM-DDTHH:mm:SS
      * @return True if the 'stopTime' field has been set, false otherwise.
      */
    public boolean hasStopTime() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'stopTime' field.
      * Stop time of time period. Format: YYYY-MM-DDTHH:mm:SS
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgGetPasses.Builder clearStopTime() {
      stopTime = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public MsgGetPasses build() {
      try {
        MsgGetPasses record = new MsgGetPasses();
        record.authorizationToken = fieldSetFlags()[0] ? this.authorizationToken : (java.lang.String) defaultValue(fields()[0]);
        record.userRole = fieldSetFlags()[1] ? this.userRole : (java.lang.Integer) defaultValue(fields()[1]);
        record.missionId = fieldSetFlags()[2] ? this.missionId : (java.lang.Integer) defaultValue(fields()[2]);
        record.satelliteId = fieldSetFlags()[3] ? this.satelliteId : (java.lang.Integer) defaultValue(fields()[3]);
        record.groundStationId = fieldSetFlags()[4] ? this.groundStationId : (java.lang.Integer) defaultValue(fields()[4]);
        record.startTime = fieldSetFlags()[5] ? this.startTime : (java.lang.String) defaultValue(fields()[5]);
        record.stopTime = fieldSetFlags()[6] ? this.stopTime : (java.lang.String) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
