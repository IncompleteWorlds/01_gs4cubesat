/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.incomplete.cubegs.common.avro.messages;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** It defines the options of a Parameter in terms of; constraints, transmission options, severity level */
@org.apache.avro.specific.AvroGenerated
public class TC_ParameterOptConstraints extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5878170192045326324L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TC_ParameterOptConstraints\",\"namespace\":\"com.incomplete.cubegs.common.avro.messages\",\"doc\":\"It defines the options of a Parameter in terms of; constraints, transmission options, severity level\",\"fields\":[{\"name\":\"tcName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"TC name\"},{\"name\":\"constraint\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Constraint name\"},{\"name\":\"timeout\",\"type\":\"int\",\"doc\":\"The timeout of the constraint. A command stays in the queue for that many milliseconds\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** TC name */
  @Deprecated public java.lang.String tcName;
  /** Constraint name */
  @Deprecated public java.lang.String constraint;
  /** The timeout of the constraint. A command stays in the queue for that many milliseconds */
  @Deprecated public int timeout;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TC_ParameterOptConstraints() {}

  /**
   * All-args constructor.
   * @param tcName TC name
   * @param constraint Constraint name
   * @param timeout The timeout of the constraint. A command stays in the queue for that many milliseconds
   */
  public TC_ParameterOptConstraints(java.lang.String tcName, java.lang.String constraint, java.lang.Integer timeout) {
    this.tcName = tcName;
    this.constraint = constraint;
    this.timeout = timeout;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return tcName;
    case 1: return constraint;
    case 2: return timeout;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: tcName = (java.lang.String)value$; break;
    case 1: constraint = (java.lang.String)value$; break;
    case 2: timeout = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'tcName' field.
   * @return TC name
   */
  public java.lang.String getTcName() {
    return tcName;
  }

  /**
   * Sets the value of the 'tcName' field.
   * TC name
   * @param value the value to set.
   */
  public void setTcName(java.lang.String value) {
    this.tcName = value;
  }

  /**
   * Gets the value of the 'constraint' field.
   * @return Constraint name
   */
  public java.lang.String getConstraint() {
    return constraint;
  }

  /**
   * Sets the value of the 'constraint' field.
   * Constraint name
   * @param value the value to set.
   */
  public void setConstraint(java.lang.String value) {
    this.constraint = value;
  }

  /**
   * Gets the value of the 'timeout' field.
   * @return The timeout of the constraint. A command stays in the queue for that many milliseconds
   */
  public java.lang.Integer getTimeout() {
    return timeout;
  }

  /**
   * Sets the value of the 'timeout' field.
   * The timeout of the constraint. A command stays in the queue for that many milliseconds
   * @param value the value to set.
   */
  public void setTimeout(java.lang.Integer value) {
    this.timeout = value;
  }

  /**
   * Creates a new TC_ParameterOptConstraints RecordBuilder.
   * @return A new TC_ParameterOptConstraints RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.TC_ParameterOptConstraints.Builder newBuilder() {
    return new com.incomplete.cubegs.common.avro.messages.TC_ParameterOptConstraints.Builder();
  }

  /**
   * Creates a new TC_ParameterOptConstraints RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TC_ParameterOptConstraints RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.TC_ParameterOptConstraints.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.TC_ParameterOptConstraints.Builder other) {
    return new com.incomplete.cubegs.common.avro.messages.TC_ParameterOptConstraints.Builder(other);
  }

  /**
   * Creates a new TC_ParameterOptConstraints RecordBuilder by copying an existing TC_ParameterOptConstraints instance.
   * @param other The existing instance to copy.
   * @return A new TC_ParameterOptConstraints RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.TC_ParameterOptConstraints.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.TC_ParameterOptConstraints other) {
    return new com.incomplete.cubegs.common.avro.messages.TC_ParameterOptConstraints.Builder(other);
  }

  /**
   * RecordBuilder for TC_ParameterOptConstraints instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TC_ParameterOptConstraints>
    implements org.apache.avro.data.RecordBuilder<TC_ParameterOptConstraints> {

    /** TC name */
    private java.lang.String tcName;
    /** Constraint name */
    private java.lang.String constraint;
    /** The timeout of the constraint. A command stays in the queue for that many milliseconds */
    private int timeout;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.TC_ParameterOptConstraints.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.tcName)) {
        this.tcName = data().deepCopy(fields()[0].schema(), other.tcName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.constraint)) {
        this.constraint = data().deepCopy(fields()[1].schema(), other.constraint);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timeout)) {
        this.timeout = data().deepCopy(fields()[2].schema(), other.timeout);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing TC_ParameterOptConstraints instance
     * @param other The existing instance to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.TC_ParameterOptConstraints other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.tcName)) {
        this.tcName = data().deepCopy(fields()[0].schema(), other.tcName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.constraint)) {
        this.constraint = data().deepCopy(fields()[1].schema(), other.constraint);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timeout)) {
        this.timeout = data().deepCopy(fields()[2].schema(), other.timeout);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'tcName' field.
      * TC name
      * @return The value.
      */
    public java.lang.String getTcName() {
      return tcName;
    }

    /**
      * Sets the value of the 'tcName' field.
      * TC name
      * @param value The value of 'tcName'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterOptConstraints.Builder setTcName(java.lang.String value) {
      validate(fields()[0], value);
      this.tcName = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'tcName' field has been set.
      * TC name
      * @return True if the 'tcName' field has been set, false otherwise.
      */
    public boolean hasTcName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'tcName' field.
      * TC name
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterOptConstraints.Builder clearTcName() {
      tcName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'constraint' field.
      * Constraint name
      * @return The value.
      */
    public java.lang.String getConstraint() {
      return constraint;
    }

    /**
      * Sets the value of the 'constraint' field.
      * Constraint name
      * @param value The value of 'constraint'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterOptConstraints.Builder setConstraint(java.lang.String value) {
      validate(fields()[1], value);
      this.constraint = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'constraint' field has been set.
      * Constraint name
      * @return True if the 'constraint' field has been set, false otherwise.
      */
    public boolean hasConstraint() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'constraint' field.
      * Constraint name
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterOptConstraints.Builder clearConstraint() {
      constraint = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'timeout' field.
      * The timeout of the constraint. A command stays in the queue for that many milliseconds
      * @return The value.
      */
    public java.lang.Integer getTimeout() {
      return timeout;
    }

    /**
      * Sets the value of the 'timeout' field.
      * The timeout of the constraint. A command stays in the queue for that many milliseconds
      * @param value The value of 'timeout'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterOptConstraints.Builder setTimeout(int value) {
      validate(fields()[2], value);
      this.timeout = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'timeout' field has been set.
      * The timeout of the constraint. A command stays in the queue for that many milliseconds
      * @return True if the 'timeout' field has been set, false otherwise.
      */
    public boolean hasTimeout() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'timeout' field.
      * The timeout of the constraint. A command stays in the queue for that many milliseconds
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.TC_ParameterOptConstraints.Builder clearTimeout() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public TC_ParameterOptConstraints build() {
      try {
        TC_ParameterOptConstraints record = new TC_ParameterOptConstraints();
        record.tcName = fieldSetFlags()[0] ? this.tcName : (java.lang.String) defaultValue(fields()[0]);
        record.constraint = fieldSetFlags()[1] ? this.constraint : (java.lang.String) defaultValue(fields()[1]);
        record.timeout = fieldSetFlags()[2] ? this.timeout : (java.lang.Integer) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
