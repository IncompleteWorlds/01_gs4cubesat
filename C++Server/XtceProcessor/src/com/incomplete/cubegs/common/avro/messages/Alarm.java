/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.incomplete.cubegs.common.avro.messages;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** It defines an Alarm that applies to a TM Parameter */
@org.apache.avro.specific.AvroGenerated
public class Alarm extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -699535042975804646L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Alarm\",\"namespace\":\"com.incomplete.cubegs.common.avro.messages\",\"doc\":\"It defines an Alarm that applies to a TM Parameter\",\"fields\":[{\"name\":\"parameterName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Name of TM Parameter this alarm applies to\"},{\"name\":\"listAlarmContext\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AlarmContext\",\"doc\":\"It defines an Alarm that applies to a TM Parameter\",\"fields\":[{\"name\":\"parameterName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Name of TM Parameter this alarm applies to\"},{\"name\":\"reportType\",\"type\":{\"type\":\"enum\",\"name\":\"AlarmReportTypeEnum\",\"symbols\":[\"ALARM_REPORT_ON_VALUE_CHANGE\",\"ALARM_REPORT_ON_SEVERITY_CHANGE\"]},\"doc\":\"Alarm report types\"},{\"name\":\"minimumViolations\",\"type\":\"int\",\"doc\":\"Number of violations before Alarm is reported\"},{\"name\":\"watchTriggerType\",\"type\":{\"type\":\"enum\",\"name\":\"WatchTriggerTypeEnum\",\"symbols\":[\"Low\",\"High\",\"State\"]},\"doc\":\"Type of trigger; low, high, state\"},{\"name\":\"watchTriggerValue\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Value of the trigger\"},{\"name\":\"warningTriggerType\",\"type\":\"WatchTriggerTypeEnum\",\"doc\":\"Type of trigger; low, high, state\"},{\"name\":\"warningTriggerValue\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Value of the trigger\"},{\"name\":\"distressTriggerType\",\"type\":\"WatchTriggerTypeEnum\",\"doc\":\"Type of trigger; low, high, state\"},{\"name\":\"distressTriggerValue\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Value of the trigger\"},{\"name\":\"criticalTriggerType\",\"type\":\"WatchTriggerTypeEnum\",\"doc\":\"Type of trigger; low, high, state\"},{\"name\":\"criticalTriggerValue\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Value of the trigger\"},{\"name\":\"severeTriggerType\",\"type\":\"WatchTriggerTypeEnum\",\"doc\":\"Type of trigger; low, high, state\"},{\"name\":\"severeTriggerValue\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Value of the trigger\"}]}},\"doc\":\"List of Context of the Alarm\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Name of TM Parameter this alarm applies to */
  @Deprecated public java.lang.String parameterName;
  /** List of Context of the Alarm */
  @Deprecated public java.util.List<com.incomplete.cubegs.common.avro.messages.AlarmContext> listAlarmContext;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Alarm() {}

  /**
   * All-args constructor.
   * @param parameterName Name of TM Parameter this alarm applies to
   * @param listAlarmContext List of Context of the Alarm
   */
  public Alarm(java.lang.String parameterName, java.util.List<com.incomplete.cubegs.common.avro.messages.AlarmContext> listAlarmContext) {
    this.parameterName = parameterName;
    this.listAlarmContext = listAlarmContext;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return parameterName;
    case 1: return listAlarmContext;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: parameterName = (java.lang.String)value$; break;
    case 1: listAlarmContext = (java.util.List<com.incomplete.cubegs.common.avro.messages.AlarmContext>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'parameterName' field.
   * @return Name of TM Parameter this alarm applies to
   */
  public java.lang.String getParameterName() {
    return parameterName;
  }

  /**
   * Sets the value of the 'parameterName' field.
   * Name of TM Parameter this alarm applies to
   * @param value the value to set.
   */
  public void setParameterName(java.lang.String value) {
    this.parameterName = value;
  }

  /**
   * Gets the value of the 'listAlarmContext' field.
   * @return List of Context of the Alarm
   */
  public java.util.List<com.incomplete.cubegs.common.avro.messages.AlarmContext> getListAlarmContext() {
    return listAlarmContext;
  }

  /**
   * Sets the value of the 'listAlarmContext' field.
   * List of Context of the Alarm
   * @param value the value to set.
   */
  public void setListAlarmContext(java.util.List<com.incomplete.cubegs.common.avro.messages.AlarmContext> value) {
    this.listAlarmContext = value;
  }

  /**
   * Creates a new Alarm RecordBuilder.
   * @return A new Alarm RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.Alarm.Builder newBuilder() {
    return new com.incomplete.cubegs.common.avro.messages.Alarm.Builder();
  }

  /**
   * Creates a new Alarm RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Alarm RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.Alarm.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.Alarm.Builder other) {
    return new com.incomplete.cubegs.common.avro.messages.Alarm.Builder(other);
  }

  /**
   * Creates a new Alarm RecordBuilder by copying an existing Alarm instance.
   * @param other The existing instance to copy.
   * @return A new Alarm RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.Alarm.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.Alarm other) {
    return new com.incomplete.cubegs.common.avro.messages.Alarm.Builder(other);
  }

  /**
   * RecordBuilder for Alarm instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Alarm>
    implements org.apache.avro.data.RecordBuilder<Alarm> {

    /** Name of TM Parameter this alarm applies to */
    private java.lang.String parameterName;
    /** List of Context of the Alarm */
    private java.util.List<com.incomplete.cubegs.common.avro.messages.AlarmContext> listAlarmContext;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.Alarm.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.parameterName)) {
        this.parameterName = data().deepCopy(fields()[0].schema(), other.parameterName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.listAlarmContext)) {
        this.listAlarmContext = data().deepCopy(fields()[1].schema(), other.listAlarmContext);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Alarm instance
     * @param other The existing instance to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.Alarm other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.parameterName)) {
        this.parameterName = data().deepCopy(fields()[0].schema(), other.parameterName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.listAlarmContext)) {
        this.listAlarmContext = data().deepCopy(fields()[1].schema(), other.listAlarmContext);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'parameterName' field.
      * Name of TM Parameter this alarm applies to
      * @return The value.
      */
    public java.lang.String getParameterName() {
      return parameterName;
    }

    /**
      * Sets the value of the 'parameterName' field.
      * Name of TM Parameter this alarm applies to
      * @param value The value of 'parameterName'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.Alarm.Builder setParameterName(java.lang.String value) {
      validate(fields()[0], value);
      this.parameterName = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'parameterName' field has been set.
      * Name of TM Parameter this alarm applies to
      * @return True if the 'parameterName' field has been set, false otherwise.
      */
    public boolean hasParameterName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'parameterName' field.
      * Name of TM Parameter this alarm applies to
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.Alarm.Builder clearParameterName() {
      parameterName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'listAlarmContext' field.
      * List of Context of the Alarm
      * @return The value.
      */
    public java.util.List<com.incomplete.cubegs.common.avro.messages.AlarmContext> getListAlarmContext() {
      return listAlarmContext;
    }

    /**
      * Sets the value of the 'listAlarmContext' field.
      * List of Context of the Alarm
      * @param value The value of 'listAlarmContext'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.Alarm.Builder setListAlarmContext(java.util.List<com.incomplete.cubegs.common.avro.messages.AlarmContext> value) {
      validate(fields()[1], value);
      this.listAlarmContext = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'listAlarmContext' field has been set.
      * List of Context of the Alarm
      * @return True if the 'listAlarmContext' field has been set, false otherwise.
      */
    public boolean hasListAlarmContext() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'listAlarmContext' field.
      * List of Context of the Alarm
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.Alarm.Builder clearListAlarmContext() {
      listAlarmContext = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public Alarm build() {
      try {
        Alarm record = new Alarm();
        record.parameterName = fieldSetFlags()[0] ? this.parameterName : (java.lang.String) defaultValue(fields()[0]);
        record.listAlarmContext = fieldSetFlags()[1] ? this.listAlarmContext : (java.util.List<com.incomplete.cubegs.common.avro.messages.AlarmContext>) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
