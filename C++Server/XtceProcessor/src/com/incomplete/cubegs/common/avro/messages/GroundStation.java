/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.incomplete.cubegs.common.avro.messages;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** This record contains the ground station parameters */
@org.apache.avro.specific.AvroGenerated
public class GroundStation extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3267095158257447049L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GroundStation\",\"namespace\":\"com.incomplete.cubegs.common.avro.messages\",\"doc\":\"This record contains the ground station parameters\",\"fields\":[{\"name\":\"identifier\",\"type\":\"int\",\"doc\":\"Unique identifier of the ground station\"},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Ground station name\"},{\"name\":\"description\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Description of the station\"},{\"name\":\"code\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Short code of the station. I.e. SVB\"},{\"name\":\"owner\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Company / entity that owns the ground station\"},{\"name\":\"latitude\",\"type\":\"float\",\"doc\":\"Latitude of the station. Decimal degree. North\"},{\"name\":\"longitude\",\"type\":\"float\",\"doc\":\"Longitude of the station. Decimal degree. East\"},{\"name\":\"altitude\",\"type\":\"float\",\"doc\":\"Altitude over the sea of the station. Meters\"},{\"name\":\"connectionType\",\"type\":{\"type\":\"enum\",\"name\":\"ConnectionTypeEnum\",\"symbols\":[\"NONE\",\"TCP\",\"SERIAL\",\"USB\"]},\"doc\":\"Connection type. Enum; NONE, TCP, SERIAL, USB\"},{\"name\":\"url\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"URL of the ground station. Tcp connections\"},{\"name\":\"port\",\"type\":\"int\",\"doc\":\"IP port of the GS. Tcp connections\"},{\"name\":\"comPort\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Serial com port of the GS\"},{\"name\":\"speed\",\"type\":\"float\",\"doc\":\"Serial speed of the serial link with GS\"},{\"name\":\"parity\",\"type\":\"float\",\"doc\":\"Serial parity of the serial link with GS\"},{\"name\":\"controlBits\",\"type\":\"float\",\"doc\":\"Control bits of the serial link\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Unique identifier of the ground station */
  @Deprecated public int identifier;
  /** Ground station name */
  @Deprecated public java.lang.String name;
  /** Description of the station */
  @Deprecated public java.lang.String description;
  /** Short code of the station. I.e. SVB */
  @Deprecated public java.lang.String code;
  /** Company / entity that owns the ground station */
  @Deprecated public java.lang.String owner;
  /** Latitude of the station. Decimal degree. North */
  @Deprecated public float latitude;
  /** Longitude of the station. Decimal degree. East */
  @Deprecated public float longitude;
  /** Altitude over the sea of the station. Meters */
  @Deprecated public float altitude;
  /** Connection type. Enum; NONE, TCP, SERIAL, USB */
  @Deprecated public com.incomplete.cubegs.common.avro.messages.ConnectionTypeEnum connectionType;
  /** URL of the ground station. Tcp connections */
  @Deprecated public java.lang.String url;
  /** IP port of the GS. Tcp connections */
  @Deprecated public int port;
  /** Serial com port of the GS */
  @Deprecated public java.lang.String comPort;
  /** Serial speed of the serial link with GS */
  @Deprecated public float speed;
  /** Serial parity of the serial link with GS */
  @Deprecated public float parity;
  /** Control bits of the serial link */
  @Deprecated public float controlBits;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public GroundStation() {}

  /**
   * All-args constructor.
   * @param identifier Unique identifier of the ground station
   * @param name Ground station name
   * @param description Description of the station
   * @param code Short code of the station. I.e. SVB
   * @param owner Company / entity that owns the ground station
   * @param latitude Latitude of the station. Decimal degree. North
   * @param longitude Longitude of the station. Decimal degree. East
   * @param altitude Altitude over the sea of the station. Meters
   * @param connectionType Connection type. Enum; NONE, TCP, SERIAL, USB
   * @param url URL of the ground station. Tcp connections
   * @param port IP port of the GS. Tcp connections
   * @param comPort Serial com port of the GS
   * @param speed Serial speed of the serial link with GS
   * @param parity Serial parity of the serial link with GS
   * @param controlBits Control bits of the serial link
   */
  public GroundStation(java.lang.Integer identifier, java.lang.String name, java.lang.String description, java.lang.String code, java.lang.String owner, java.lang.Float latitude, java.lang.Float longitude, java.lang.Float altitude, com.incomplete.cubegs.common.avro.messages.ConnectionTypeEnum connectionType, java.lang.String url, java.lang.Integer port, java.lang.String comPort, java.lang.Float speed, java.lang.Float parity, java.lang.Float controlBits) {
    this.identifier = identifier;
    this.name = name;
    this.description = description;
    this.code = code;
    this.owner = owner;
    this.latitude = latitude;
    this.longitude = longitude;
    this.altitude = altitude;
    this.connectionType = connectionType;
    this.url = url;
    this.port = port;
    this.comPort = comPort;
    this.speed = speed;
    this.parity = parity;
    this.controlBits = controlBits;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return identifier;
    case 1: return name;
    case 2: return description;
    case 3: return code;
    case 4: return owner;
    case 5: return latitude;
    case 6: return longitude;
    case 7: return altitude;
    case 8: return connectionType;
    case 9: return url;
    case 10: return port;
    case 11: return comPort;
    case 12: return speed;
    case 13: return parity;
    case 14: return controlBits;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: identifier = (java.lang.Integer)value$; break;
    case 1: name = (java.lang.String)value$; break;
    case 2: description = (java.lang.String)value$; break;
    case 3: code = (java.lang.String)value$; break;
    case 4: owner = (java.lang.String)value$; break;
    case 5: latitude = (java.lang.Float)value$; break;
    case 6: longitude = (java.lang.Float)value$; break;
    case 7: altitude = (java.lang.Float)value$; break;
    case 8: connectionType = (com.incomplete.cubegs.common.avro.messages.ConnectionTypeEnum)value$; break;
    case 9: url = (java.lang.String)value$; break;
    case 10: port = (java.lang.Integer)value$; break;
    case 11: comPort = (java.lang.String)value$; break;
    case 12: speed = (java.lang.Float)value$; break;
    case 13: parity = (java.lang.Float)value$; break;
    case 14: controlBits = (java.lang.Float)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'identifier' field.
   * @return Unique identifier of the ground station
   */
  public java.lang.Integer getIdentifier() {
    return identifier;
  }

  /**
   * Sets the value of the 'identifier' field.
   * Unique identifier of the ground station
   * @param value the value to set.
   */
  public void setIdentifier(java.lang.Integer value) {
    this.identifier = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return Ground station name
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * Ground station name
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return Description of the station
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * Description of the station
   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'code' field.
   * @return Short code of the station. I.e. SVB
   */
  public java.lang.String getCode() {
    return code;
  }

  /**
   * Sets the value of the 'code' field.
   * Short code of the station. I.e. SVB
   * @param value the value to set.
   */
  public void setCode(java.lang.String value) {
    this.code = value;
  }

  /**
   * Gets the value of the 'owner' field.
   * @return Company / entity that owns the ground station
   */
  public java.lang.String getOwner() {
    return owner;
  }

  /**
   * Sets the value of the 'owner' field.
   * Company / entity that owns the ground station
   * @param value the value to set.
   */
  public void setOwner(java.lang.String value) {
    this.owner = value;
  }

  /**
   * Gets the value of the 'latitude' field.
   * @return Latitude of the station. Decimal degree. North
   */
  public java.lang.Float getLatitude() {
    return latitude;
  }

  /**
   * Sets the value of the 'latitude' field.
   * Latitude of the station. Decimal degree. North
   * @param value the value to set.
   */
  public void setLatitude(java.lang.Float value) {
    this.latitude = value;
  }

  /**
   * Gets the value of the 'longitude' field.
   * @return Longitude of the station. Decimal degree. East
   */
  public java.lang.Float getLongitude() {
    return longitude;
  }

  /**
   * Sets the value of the 'longitude' field.
   * Longitude of the station. Decimal degree. East
   * @param value the value to set.
   */
  public void setLongitude(java.lang.Float value) {
    this.longitude = value;
  }

  /**
   * Gets the value of the 'altitude' field.
   * @return Altitude over the sea of the station. Meters
   */
  public java.lang.Float getAltitude() {
    return altitude;
  }

  /**
   * Sets the value of the 'altitude' field.
   * Altitude over the sea of the station. Meters
   * @param value the value to set.
   */
  public void setAltitude(java.lang.Float value) {
    this.altitude = value;
  }

  /**
   * Gets the value of the 'connectionType' field.
   * @return Connection type. Enum; NONE, TCP, SERIAL, USB
   */
  public com.incomplete.cubegs.common.avro.messages.ConnectionTypeEnum getConnectionType() {
    return connectionType;
  }

  /**
   * Sets the value of the 'connectionType' field.
   * Connection type. Enum; NONE, TCP, SERIAL, USB
   * @param value the value to set.
   */
  public void setConnectionType(com.incomplete.cubegs.common.avro.messages.ConnectionTypeEnum value) {
    this.connectionType = value;
  }

  /**
   * Gets the value of the 'url' field.
   * @return URL of the ground station. Tcp connections
   */
  public java.lang.String getUrl() {
    return url;
  }

  /**
   * Sets the value of the 'url' field.
   * URL of the ground station. Tcp connections
   * @param value the value to set.
   */
  public void setUrl(java.lang.String value) {
    this.url = value;
  }

  /**
   * Gets the value of the 'port' field.
   * @return IP port of the GS. Tcp connections
   */
  public java.lang.Integer getPort() {
    return port;
  }

  /**
   * Sets the value of the 'port' field.
   * IP port of the GS. Tcp connections
   * @param value the value to set.
   */
  public void setPort(java.lang.Integer value) {
    this.port = value;
  }

  /**
   * Gets the value of the 'comPort' field.
   * @return Serial com port of the GS
   */
  public java.lang.String getComPort() {
    return comPort;
  }

  /**
   * Sets the value of the 'comPort' field.
   * Serial com port of the GS
   * @param value the value to set.
   */
  public void setComPort(java.lang.String value) {
    this.comPort = value;
  }

  /**
   * Gets the value of the 'speed' field.
   * @return Serial speed of the serial link with GS
   */
  public java.lang.Float getSpeed() {
    return speed;
  }

  /**
   * Sets the value of the 'speed' field.
   * Serial speed of the serial link with GS
   * @param value the value to set.
   */
  public void setSpeed(java.lang.Float value) {
    this.speed = value;
  }

  /**
   * Gets the value of the 'parity' field.
   * @return Serial parity of the serial link with GS
   */
  public java.lang.Float getParity() {
    return parity;
  }

  /**
   * Sets the value of the 'parity' field.
   * Serial parity of the serial link with GS
   * @param value the value to set.
   */
  public void setParity(java.lang.Float value) {
    this.parity = value;
  }

  /**
   * Gets the value of the 'controlBits' field.
   * @return Control bits of the serial link
   */
  public java.lang.Float getControlBits() {
    return controlBits;
  }

  /**
   * Sets the value of the 'controlBits' field.
   * Control bits of the serial link
   * @param value the value to set.
   */
  public void setControlBits(java.lang.Float value) {
    this.controlBits = value;
  }

  /**
   * Creates a new GroundStation RecordBuilder.
   * @return A new GroundStation RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.GroundStation.Builder newBuilder() {
    return new com.incomplete.cubegs.common.avro.messages.GroundStation.Builder();
  }

  /**
   * Creates a new GroundStation RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new GroundStation RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.GroundStation.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.GroundStation.Builder other) {
    return new com.incomplete.cubegs.common.avro.messages.GroundStation.Builder(other);
  }

  /**
   * Creates a new GroundStation RecordBuilder by copying an existing GroundStation instance.
   * @param other The existing instance to copy.
   * @return A new GroundStation RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.GroundStation.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.GroundStation other) {
    return new com.incomplete.cubegs.common.avro.messages.GroundStation.Builder(other);
  }

  /**
   * RecordBuilder for GroundStation instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GroundStation>
    implements org.apache.avro.data.RecordBuilder<GroundStation> {

    /** Unique identifier of the ground station */
    private int identifier;
    /** Ground station name */
    private java.lang.String name;
    /** Description of the station */
    private java.lang.String description;
    /** Short code of the station. I.e. SVB */
    private java.lang.String code;
    /** Company / entity that owns the ground station */
    private java.lang.String owner;
    /** Latitude of the station. Decimal degree. North */
    private float latitude;
    /** Longitude of the station. Decimal degree. East */
    private float longitude;
    /** Altitude over the sea of the station. Meters */
    private float altitude;
    /** Connection type. Enum; NONE, TCP, SERIAL, USB */
    private com.incomplete.cubegs.common.avro.messages.ConnectionTypeEnum connectionType;
    /** URL of the ground station. Tcp connections */
    private java.lang.String url;
    /** IP port of the GS. Tcp connections */
    private int port;
    /** Serial com port of the GS */
    private java.lang.String comPort;
    /** Serial speed of the serial link with GS */
    private float speed;
    /** Serial parity of the serial link with GS */
    private float parity;
    /** Control bits of the serial link */
    private float controlBits;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.GroundStation.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.identifier)) {
        this.identifier = data().deepCopy(fields()[0].schema(), other.identifier);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.code)) {
        this.code = data().deepCopy(fields()[3].schema(), other.code);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.owner)) {
        this.owner = data().deepCopy(fields()[4].schema(), other.owner);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.latitude)) {
        this.latitude = data().deepCopy(fields()[5].schema(), other.latitude);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.longitude)) {
        this.longitude = data().deepCopy(fields()[6].schema(), other.longitude);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.altitude)) {
        this.altitude = data().deepCopy(fields()[7].schema(), other.altitude);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.connectionType)) {
        this.connectionType = data().deepCopy(fields()[8].schema(), other.connectionType);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.url)) {
        this.url = data().deepCopy(fields()[9].schema(), other.url);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.port)) {
        this.port = data().deepCopy(fields()[10].schema(), other.port);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.comPort)) {
        this.comPort = data().deepCopy(fields()[11].schema(), other.comPort);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.speed)) {
        this.speed = data().deepCopy(fields()[12].schema(), other.speed);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.parity)) {
        this.parity = data().deepCopy(fields()[13].schema(), other.parity);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.controlBits)) {
        this.controlBits = data().deepCopy(fields()[14].schema(), other.controlBits);
        fieldSetFlags()[14] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing GroundStation instance
     * @param other The existing instance to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.GroundStation other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.identifier)) {
        this.identifier = data().deepCopy(fields()[0].schema(), other.identifier);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.code)) {
        this.code = data().deepCopy(fields()[3].schema(), other.code);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.owner)) {
        this.owner = data().deepCopy(fields()[4].schema(), other.owner);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.latitude)) {
        this.latitude = data().deepCopy(fields()[5].schema(), other.latitude);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.longitude)) {
        this.longitude = data().deepCopy(fields()[6].schema(), other.longitude);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.altitude)) {
        this.altitude = data().deepCopy(fields()[7].schema(), other.altitude);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.connectionType)) {
        this.connectionType = data().deepCopy(fields()[8].schema(), other.connectionType);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.url)) {
        this.url = data().deepCopy(fields()[9].schema(), other.url);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.port)) {
        this.port = data().deepCopy(fields()[10].schema(), other.port);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.comPort)) {
        this.comPort = data().deepCopy(fields()[11].schema(), other.comPort);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.speed)) {
        this.speed = data().deepCopy(fields()[12].schema(), other.speed);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.parity)) {
        this.parity = data().deepCopy(fields()[13].schema(), other.parity);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.controlBits)) {
        this.controlBits = data().deepCopy(fields()[14].schema(), other.controlBits);
        fieldSetFlags()[14] = true;
      }
    }

    /**
      * Gets the value of the 'identifier' field.
      * Unique identifier of the ground station
      * @return The value.
      */
    public java.lang.Integer getIdentifier() {
      return identifier;
    }

    /**
      * Sets the value of the 'identifier' field.
      * Unique identifier of the ground station
      * @param value The value of 'identifier'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder setIdentifier(int value) {
      validate(fields()[0], value);
      this.identifier = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'identifier' field has been set.
      * Unique identifier of the ground station
      * @return True if the 'identifier' field has been set, false otherwise.
      */
    public boolean hasIdentifier() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'identifier' field.
      * Unique identifier of the ground station
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder clearIdentifier() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * Ground station name
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * Ground station name
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder setName(java.lang.String value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * Ground station name
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * Ground station name
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * Description of the station
      * @return The value.
      */
    public java.lang.String getDescription() {
      return description;
    }

    /**
      * Sets the value of the 'description' field.
      * Description of the station
      * @param value The value of 'description'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder setDescription(java.lang.String value) {
      validate(fields()[2], value);
      this.description = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * Description of the station
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'description' field.
      * Description of the station
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder clearDescription() {
      description = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'code' field.
      * Short code of the station. I.e. SVB
      * @return The value.
      */
    public java.lang.String getCode() {
      return code;
    }

    /**
      * Sets the value of the 'code' field.
      * Short code of the station. I.e. SVB
      * @param value The value of 'code'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder setCode(java.lang.String value) {
      validate(fields()[3], value);
      this.code = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'code' field has been set.
      * Short code of the station. I.e. SVB
      * @return True if the 'code' field has been set, false otherwise.
      */
    public boolean hasCode() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'code' field.
      * Short code of the station. I.e. SVB
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder clearCode() {
      code = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'owner' field.
      * Company / entity that owns the ground station
      * @return The value.
      */
    public java.lang.String getOwner() {
      return owner;
    }

    /**
      * Sets the value of the 'owner' field.
      * Company / entity that owns the ground station
      * @param value The value of 'owner'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder setOwner(java.lang.String value) {
      validate(fields()[4], value);
      this.owner = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'owner' field has been set.
      * Company / entity that owns the ground station
      * @return True if the 'owner' field has been set, false otherwise.
      */
    public boolean hasOwner() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'owner' field.
      * Company / entity that owns the ground station
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder clearOwner() {
      owner = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'latitude' field.
      * Latitude of the station. Decimal degree. North
      * @return The value.
      */
    public java.lang.Float getLatitude() {
      return latitude;
    }

    /**
      * Sets the value of the 'latitude' field.
      * Latitude of the station. Decimal degree. North
      * @param value The value of 'latitude'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder setLatitude(float value) {
      validate(fields()[5], value);
      this.latitude = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'latitude' field has been set.
      * Latitude of the station. Decimal degree. North
      * @return True if the 'latitude' field has been set, false otherwise.
      */
    public boolean hasLatitude() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'latitude' field.
      * Latitude of the station. Decimal degree. North
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder clearLatitude() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'longitude' field.
      * Longitude of the station. Decimal degree. East
      * @return The value.
      */
    public java.lang.Float getLongitude() {
      return longitude;
    }

    /**
      * Sets the value of the 'longitude' field.
      * Longitude of the station. Decimal degree. East
      * @param value The value of 'longitude'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder setLongitude(float value) {
      validate(fields()[6], value);
      this.longitude = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'longitude' field has been set.
      * Longitude of the station. Decimal degree. East
      * @return True if the 'longitude' field has been set, false otherwise.
      */
    public boolean hasLongitude() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'longitude' field.
      * Longitude of the station. Decimal degree. East
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder clearLongitude() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'altitude' field.
      * Altitude over the sea of the station. Meters
      * @return The value.
      */
    public java.lang.Float getAltitude() {
      return altitude;
    }

    /**
      * Sets the value of the 'altitude' field.
      * Altitude over the sea of the station. Meters
      * @param value The value of 'altitude'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder setAltitude(float value) {
      validate(fields()[7], value);
      this.altitude = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'altitude' field has been set.
      * Altitude over the sea of the station. Meters
      * @return True if the 'altitude' field has been set, false otherwise.
      */
    public boolean hasAltitude() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'altitude' field.
      * Altitude over the sea of the station. Meters
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder clearAltitude() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'connectionType' field.
      * Connection type. Enum; NONE, TCP, SERIAL, USB
      * @return The value.
      */
    public com.incomplete.cubegs.common.avro.messages.ConnectionTypeEnum getConnectionType() {
      return connectionType;
    }

    /**
      * Sets the value of the 'connectionType' field.
      * Connection type. Enum; NONE, TCP, SERIAL, USB
      * @param value The value of 'connectionType'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder setConnectionType(com.incomplete.cubegs.common.avro.messages.ConnectionTypeEnum value) {
      validate(fields()[8], value);
      this.connectionType = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'connectionType' field has been set.
      * Connection type. Enum; NONE, TCP, SERIAL, USB
      * @return True if the 'connectionType' field has been set, false otherwise.
      */
    public boolean hasConnectionType() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'connectionType' field.
      * Connection type. Enum; NONE, TCP, SERIAL, USB
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder clearConnectionType() {
      connectionType = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'url' field.
      * URL of the ground station. Tcp connections
      * @return The value.
      */
    public java.lang.String getUrl() {
      return url;
    }

    /**
      * Sets the value of the 'url' field.
      * URL of the ground station. Tcp connections
      * @param value The value of 'url'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder setUrl(java.lang.String value) {
      validate(fields()[9], value);
      this.url = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'url' field has been set.
      * URL of the ground station. Tcp connections
      * @return True if the 'url' field has been set, false otherwise.
      */
    public boolean hasUrl() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'url' field.
      * URL of the ground station. Tcp connections
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder clearUrl() {
      url = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'port' field.
      * IP port of the GS. Tcp connections
      * @return The value.
      */
    public java.lang.Integer getPort() {
      return port;
    }

    /**
      * Sets the value of the 'port' field.
      * IP port of the GS. Tcp connections
      * @param value The value of 'port'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder setPort(int value) {
      validate(fields()[10], value);
      this.port = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'port' field has been set.
      * IP port of the GS. Tcp connections
      * @return True if the 'port' field has been set, false otherwise.
      */
    public boolean hasPort() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'port' field.
      * IP port of the GS. Tcp connections
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder clearPort() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'comPort' field.
      * Serial com port of the GS
      * @return The value.
      */
    public java.lang.String getComPort() {
      return comPort;
    }

    /**
      * Sets the value of the 'comPort' field.
      * Serial com port of the GS
      * @param value The value of 'comPort'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder setComPort(java.lang.String value) {
      validate(fields()[11], value);
      this.comPort = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'comPort' field has been set.
      * Serial com port of the GS
      * @return True if the 'comPort' field has been set, false otherwise.
      */
    public boolean hasComPort() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'comPort' field.
      * Serial com port of the GS
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder clearComPort() {
      comPort = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'speed' field.
      * Serial speed of the serial link with GS
      * @return The value.
      */
    public java.lang.Float getSpeed() {
      return speed;
    }

    /**
      * Sets the value of the 'speed' field.
      * Serial speed of the serial link with GS
      * @param value The value of 'speed'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder setSpeed(float value) {
      validate(fields()[12], value);
      this.speed = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'speed' field has been set.
      * Serial speed of the serial link with GS
      * @return True if the 'speed' field has been set, false otherwise.
      */
    public boolean hasSpeed() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'speed' field.
      * Serial speed of the serial link with GS
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder clearSpeed() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'parity' field.
      * Serial parity of the serial link with GS
      * @return The value.
      */
    public java.lang.Float getParity() {
      return parity;
    }

    /**
      * Sets the value of the 'parity' field.
      * Serial parity of the serial link with GS
      * @param value The value of 'parity'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder setParity(float value) {
      validate(fields()[13], value);
      this.parity = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'parity' field has been set.
      * Serial parity of the serial link with GS
      * @return True if the 'parity' field has been set, false otherwise.
      */
    public boolean hasParity() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'parity' field.
      * Serial parity of the serial link with GS
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder clearParity() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'controlBits' field.
      * Control bits of the serial link
      * @return The value.
      */
    public java.lang.Float getControlBits() {
      return controlBits;
    }

    /**
      * Sets the value of the 'controlBits' field.
      * Control bits of the serial link
      * @param value The value of 'controlBits'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder setControlBits(float value) {
      validate(fields()[14], value);
      this.controlBits = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'controlBits' field has been set.
      * Control bits of the serial link
      * @return True if the 'controlBits' field has been set, false otherwise.
      */
    public boolean hasControlBits() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'controlBits' field.
      * Control bits of the serial link
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.GroundStation.Builder clearControlBits() {
      fieldSetFlags()[14] = false;
      return this;
    }

    @Override
    public GroundStation build() {
      try {
        GroundStation record = new GroundStation();
        record.identifier = fieldSetFlags()[0] ? this.identifier : (java.lang.Integer) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.String) defaultValue(fields()[1]);
        record.description = fieldSetFlags()[2] ? this.description : (java.lang.String) defaultValue(fields()[2]);
        record.code = fieldSetFlags()[3] ? this.code : (java.lang.String) defaultValue(fields()[3]);
        record.owner = fieldSetFlags()[4] ? this.owner : (java.lang.String) defaultValue(fields()[4]);
        record.latitude = fieldSetFlags()[5] ? this.latitude : (java.lang.Float) defaultValue(fields()[5]);
        record.longitude = fieldSetFlags()[6] ? this.longitude : (java.lang.Float) defaultValue(fields()[6]);
        record.altitude = fieldSetFlags()[7] ? this.altitude : (java.lang.Float) defaultValue(fields()[7]);
        record.connectionType = fieldSetFlags()[8] ? this.connectionType : (com.incomplete.cubegs.common.avro.messages.ConnectionTypeEnum) defaultValue(fields()[8]);
        record.url = fieldSetFlags()[9] ? this.url : (java.lang.String) defaultValue(fields()[9]);
        record.port = fieldSetFlags()[10] ? this.port : (java.lang.Integer) defaultValue(fields()[10]);
        record.comPort = fieldSetFlags()[11] ? this.comPort : (java.lang.String) defaultValue(fields()[11]);
        record.speed = fieldSetFlags()[12] ? this.speed : (java.lang.Float) defaultValue(fields()[12]);
        record.parity = fieldSetFlags()[13] ? this.parity : (java.lang.Float) defaultValue(fields()[13]);
        record.controlBits = fieldSetFlags()[14] ? this.controlBits : (java.lang.Float) defaultValue(fields()[14]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
