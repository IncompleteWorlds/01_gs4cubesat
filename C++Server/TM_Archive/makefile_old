#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = -Iinclude -I../Common/include -I../Security_Access_Control/include -I../Common/include/clients
CFLAGS = -fexceptions -std=c++11 -Wall -Weffc++  -m64
RESINC = 
LIBDIR = -L/usr/local/lib
LIB = -lCommon -lSecurity_Access_Control -pthread -lboost_system -lSQLiteCpp -lsqlite3 -lavrocpp -lzmq
LDFLAGS = 

INC_DEBUG = $(INC) -Iinclude
CFLAGS_DEBUG = $(CFLAGS) -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR) -L../Common/bin/Debug -L../Security_Access_Control/bin/Debug
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG =  ../Common/bin/Debug/libCommon.so ../Security_Access_Control/bin/Debug/libSecurity_Access_Control.so
OUT_DEBUG = bin/Debug/tm_archive

INC_RELEASE = $(INC) -Iinclude
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR) -L../Common/bin/Release -L../Security_Access_Control/bin/Release
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE =  ../Common/bin/Release/libCommon.so ../Security_Access_Control/bin/Release/libSecurity_Access_Control.so
OUT_RELEASE = bin/Release/tm_archive



THE_SRCS=\
    archive_main.cpp \
    ExternalIF.cpp \
    ArchiveModuleManager.cpp \
    ArchiveMessageProcessor.cpp \
    ArchiveDatabase.cpp \
    EventMessage.cpp



OBJ_DEBUG = $(patsubst %.cpp,obj/Debug/%.o,$(THE_SRCS))
OBJ_RELEASE  = $(patsubst %.cpp,obj/Release/%.o,$(THE_SRCS))

vpath  %.cpp  ./src


all: debug release

clean: clean_debug clean_release

before_debug: 
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/%.o : %.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c $< -o $@


clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)




before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/%.o : %.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c $< -o $@

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release


