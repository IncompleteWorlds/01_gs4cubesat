/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.incomplete.cubegs.common.avro.messages;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** This message propagates the orbit of the selected satellite using SGP4 algoritm */
@org.apache.avro.specific.AvroGenerated
public class MsgPropagateSGP4 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 426711376389304056L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MsgPropagateSGP4\",\"namespace\":\"com.incomplete.cubegs.common.avro.messages\",\"doc\":\"This message propagates the orbit of the selected satellite using SGP4 algoritm\",\"fields\":[{\"name\":\"header\",\"type\":{\"type\":\"record\",\"name\":\"MsgHeader\",\"doc\":\"This message describes the header of a message\",\"fields\":[{\"name\":\"version\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Fix value; 1.0\"},{\"name\":\"msg_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Unique identifier of the message\"},{\"name\":\"msg_code\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"code of the operation to be executed\"},{\"name\":\"authentication_key\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Authentication code. Not used\"},{\"name\":\"execution_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Unique execution identifier\"},{\"name\":\"user_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Unique user identifier\"}]},\"doc\":\"Common messages header\"},{\"name\":\"mission_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Unique mission identifier\"},{\"name\":\"satellite_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Unique satellite identifier\"},{\"name\":\"add_to_database\",\"type\":\"boolean\",\"doc\":\"Add output to the mission database. Not used\",\"default\":false},{\"name\":\"epoch_format\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Epoch format; UTCGregorian (UTC)      UTCModJulian  (MJD_2000)\"},{\"name\":\"start_time\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Start time of time period. Format: YYYY-MM-DDTHH:mm:SS.SSSZ\"},{\"name\":\"stop_time\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Stop time of time period. Format: YYYY-MM-DDTHH:mm:SS.SSSZ\"},{\"name\":\"step_size\",\"type\":\"int\",\"doc\":\"Step size in seconds\"},{\"name\":\"initial_position\",\"type\":{\"type\":\"array\",\"items\":\"double\"},\"doc\":\"x, y, z\"},{\"name\":\"initial_velocity\",\"type\":{\"type\":\"array\",\"items\":\"double\"},\"doc\":\"vx, vy, vz\"},{\"name\":\"Sgp4Input\",\"type\":{\"type\":\"record\",\"name\":\"Tle\",\"fields\":[{\"name\":\"line1\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"line2\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"output\",\"type\":{\"type\":\"record\",\"name\":\"Sgp4Output\",\"fields\":[{\"name\":\"reference_frame\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"EarthMJ2000Eq\"},{\"name\":\"epoch_format\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Epoch format; UTCGregorian (UTC)      UTCModJulian  (MJD_2000)\"},{\"name\":\"output_format\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"CSV, JSON, CCSDS-OEM\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<MsgPropagateSGP4> ENCODER =
      new BinaryMessageEncoder<MsgPropagateSGP4>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MsgPropagateSGP4> DECODER =
      new BinaryMessageDecoder<MsgPropagateSGP4>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<MsgPropagateSGP4> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<MsgPropagateSGP4> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<MsgPropagateSGP4> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MsgPropagateSGP4>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this MsgPropagateSGP4 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a MsgPropagateSGP4 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a MsgPropagateSGP4 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static MsgPropagateSGP4 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Common messages header */
  private com.incomplete.cubegs.common.avro.messages.MsgHeader header;
  /** Unique mission identifier */
  private java.lang.String mission_id;
  /** Unique satellite identifier */
  private java.lang.String satellite_id;
  /** Add output to the mission database. Not used */
  private boolean add_to_database;
  /** Epoch format; UTCGregorian (UTC)      UTCModJulian  (MJD_2000) */
  private java.lang.String epoch_format;
  /** Start time of time period. Format: YYYY-MM-DDTHH:mm:SS.SSSZ */
  private java.lang.String start_time;
  /** Stop time of time period. Format: YYYY-MM-DDTHH:mm:SS.SSSZ */
  private java.lang.String stop_time;
  /** Step size in seconds */
  private int step_size;
  /** x, y, z */
  private java.util.List<java.lang.Double> initial_position;
  /** vx, vy, vz */
  private java.util.List<java.lang.Double> initial_velocity;
  private com.incomplete.cubegs.common.avro.messages.Tle Sgp4Input;
  private com.incomplete.cubegs.common.avro.messages.Sgp4Output output;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MsgPropagateSGP4() {}

  /**
   * All-args constructor.
   * @param header Common messages header
   * @param mission_id Unique mission identifier
   * @param satellite_id Unique satellite identifier
   * @param add_to_database Add output to the mission database. Not used
   * @param epoch_format Epoch format; UTCGregorian (UTC)      UTCModJulian  (MJD_2000)
   * @param start_time Start time of time period. Format: YYYY-MM-DDTHH:mm:SS.SSSZ
   * @param stop_time Stop time of time period. Format: YYYY-MM-DDTHH:mm:SS.SSSZ
   * @param step_size Step size in seconds
   * @param initial_position x, y, z
   * @param initial_velocity vx, vy, vz
   * @param Sgp4Input The new value for Sgp4Input
   * @param output The new value for output
   */
  public MsgPropagateSGP4(com.incomplete.cubegs.common.avro.messages.MsgHeader header, java.lang.String mission_id, java.lang.String satellite_id, java.lang.Boolean add_to_database, java.lang.String epoch_format, java.lang.String start_time, java.lang.String stop_time, java.lang.Integer step_size, java.util.List<java.lang.Double> initial_position, java.util.List<java.lang.Double> initial_velocity, com.incomplete.cubegs.common.avro.messages.Tle Sgp4Input, com.incomplete.cubegs.common.avro.messages.Sgp4Output output) {
    this.header = header;
    this.mission_id = mission_id;
    this.satellite_id = satellite_id;
    this.add_to_database = add_to_database;
    this.epoch_format = epoch_format;
    this.start_time = start_time;
    this.stop_time = stop_time;
    this.step_size = step_size;
    this.initial_position = initial_position;
    this.initial_velocity = initial_velocity;
    this.Sgp4Input = Sgp4Input;
    this.output = output;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return header;
    case 1: return mission_id;
    case 2: return satellite_id;
    case 3: return add_to_database;
    case 4: return epoch_format;
    case 5: return start_time;
    case 6: return stop_time;
    case 7: return step_size;
    case 8: return initial_position;
    case 9: return initial_velocity;
    case 10: return Sgp4Input;
    case 11: return output;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: header = (com.incomplete.cubegs.common.avro.messages.MsgHeader)value$; break;
    case 1: mission_id = value$ != null ? value$.toString() : null; break;
    case 2: satellite_id = value$ != null ? value$.toString() : null; break;
    case 3: add_to_database = (java.lang.Boolean)value$; break;
    case 4: epoch_format = value$ != null ? value$.toString() : null; break;
    case 5: start_time = value$ != null ? value$.toString() : null; break;
    case 6: stop_time = value$ != null ? value$.toString() : null; break;
    case 7: step_size = (java.lang.Integer)value$; break;
    case 8: initial_position = (java.util.List<java.lang.Double>)value$; break;
    case 9: initial_velocity = (java.util.List<java.lang.Double>)value$; break;
    case 10: Sgp4Input = (com.incomplete.cubegs.common.avro.messages.Tle)value$; break;
    case 11: output = (com.incomplete.cubegs.common.avro.messages.Sgp4Output)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'header' field.
   * @return Common messages header
   */
  public com.incomplete.cubegs.common.avro.messages.MsgHeader getHeader() {
    return header;
  }


  /**
   * Sets the value of the 'header' field.
   * Common messages header
   * @param value the value to set.
   */
  public void setHeader(com.incomplete.cubegs.common.avro.messages.MsgHeader value) {
    this.header = value;
  }

  /**
   * Gets the value of the 'mission_id' field.
   * @return Unique mission identifier
   */
  public java.lang.String getMissionId() {
    return mission_id;
  }


  /**
   * Sets the value of the 'mission_id' field.
   * Unique mission identifier
   * @param value the value to set.
   */
  public void setMissionId(java.lang.String value) {
    this.mission_id = value;
  }

  /**
   * Gets the value of the 'satellite_id' field.
   * @return Unique satellite identifier
   */
  public java.lang.String getSatelliteId() {
    return satellite_id;
  }


  /**
   * Sets the value of the 'satellite_id' field.
   * Unique satellite identifier
   * @param value the value to set.
   */
  public void setSatelliteId(java.lang.String value) {
    this.satellite_id = value;
  }

  /**
   * Gets the value of the 'add_to_database' field.
   * @return Add output to the mission database. Not used
   */
  public boolean getAddToDatabase() {
    return add_to_database;
  }


  /**
   * Sets the value of the 'add_to_database' field.
   * Add output to the mission database. Not used
   * @param value the value to set.
   */
  public void setAddToDatabase(boolean value) {
    this.add_to_database = value;
  }

  /**
   * Gets the value of the 'epoch_format' field.
   * @return Epoch format; UTCGregorian (UTC)      UTCModJulian  (MJD_2000)
   */
  public java.lang.String getEpochFormat() {
    return epoch_format;
  }


  /**
   * Sets the value of the 'epoch_format' field.
   * Epoch format; UTCGregorian (UTC)      UTCModJulian  (MJD_2000)
   * @param value the value to set.
   */
  public void setEpochFormat(java.lang.String value) {
    this.epoch_format = value;
  }

  /**
   * Gets the value of the 'start_time' field.
   * @return Start time of time period. Format: YYYY-MM-DDTHH:mm:SS.SSSZ
   */
  public java.lang.String getStartTime() {
    return start_time;
  }


  /**
   * Sets the value of the 'start_time' field.
   * Start time of time period. Format: YYYY-MM-DDTHH:mm:SS.SSSZ
   * @param value the value to set.
   */
  public void setStartTime(java.lang.String value) {
    this.start_time = value;
  }

  /**
   * Gets the value of the 'stop_time' field.
   * @return Stop time of time period. Format: YYYY-MM-DDTHH:mm:SS.SSSZ
   */
  public java.lang.String getStopTime() {
    return stop_time;
  }


  /**
   * Sets the value of the 'stop_time' field.
   * Stop time of time period. Format: YYYY-MM-DDTHH:mm:SS.SSSZ
   * @param value the value to set.
   */
  public void setStopTime(java.lang.String value) {
    this.stop_time = value;
  }

  /**
   * Gets the value of the 'step_size' field.
   * @return Step size in seconds
   */
  public int getStepSize() {
    return step_size;
  }


  /**
   * Sets the value of the 'step_size' field.
   * Step size in seconds
   * @param value the value to set.
   */
  public void setStepSize(int value) {
    this.step_size = value;
  }

  /**
   * Gets the value of the 'initial_position' field.
   * @return x, y, z
   */
  public java.util.List<java.lang.Double> getInitialPosition() {
    return initial_position;
  }


  /**
   * Sets the value of the 'initial_position' field.
   * x, y, z
   * @param value the value to set.
   */
  public void setInitialPosition(java.util.List<java.lang.Double> value) {
    this.initial_position = value;
  }

  /**
   * Gets the value of the 'initial_velocity' field.
   * @return vx, vy, vz
   */
  public java.util.List<java.lang.Double> getInitialVelocity() {
    return initial_velocity;
  }


  /**
   * Sets the value of the 'initial_velocity' field.
   * vx, vy, vz
   * @param value the value to set.
   */
  public void setInitialVelocity(java.util.List<java.lang.Double> value) {
    this.initial_velocity = value;
  }

  /**
   * Gets the value of the 'Sgp4Input' field.
   * @return The value of the 'Sgp4Input' field.
   */
  public com.incomplete.cubegs.common.avro.messages.Tle getSgp4Input() {
    return Sgp4Input;
  }


  /**
   * Sets the value of the 'Sgp4Input' field.
   * @param value the value to set.
   */
  public void setSgp4Input(com.incomplete.cubegs.common.avro.messages.Tle value) {
    this.Sgp4Input = value;
  }

  /**
   * Gets the value of the 'output' field.
   * @return The value of the 'output' field.
   */
  public com.incomplete.cubegs.common.avro.messages.Sgp4Output getOutput() {
    return output;
  }


  /**
   * Sets the value of the 'output' field.
   * @param value the value to set.
   */
  public void setOutput(com.incomplete.cubegs.common.avro.messages.Sgp4Output value) {
    this.output = value;
  }

  /**
   * Creates a new MsgPropagateSGP4 RecordBuilder.
   * @return A new MsgPropagateSGP4 RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder newBuilder() {
    return new com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder();
  }

  /**
   * Creates a new MsgPropagateSGP4 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MsgPropagateSGP4 RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder other) {
    if (other == null) {
      return new com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder();
    } else {
      return new com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder(other);
    }
  }

  /**
   * Creates a new MsgPropagateSGP4 RecordBuilder by copying an existing MsgPropagateSGP4 instance.
   * @param other The existing instance to copy.
   * @return A new MsgPropagateSGP4 RecordBuilder
   */
  public static com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder newBuilder(com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4 other) {
    if (other == null) {
      return new com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder();
    } else {
      return new com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder(other);
    }
  }

  /**
   * RecordBuilder for MsgPropagateSGP4 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MsgPropagateSGP4>
    implements org.apache.avro.data.RecordBuilder<MsgPropagateSGP4> {

    /** Common messages header */
    private com.incomplete.cubegs.common.avro.messages.MsgHeader header;
    private com.incomplete.cubegs.common.avro.messages.MsgHeader.Builder headerBuilder;
    /** Unique mission identifier */
    private java.lang.String mission_id;
    /** Unique satellite identifier */
    private java.lang.String satellite_id;
    /** Add output to the mission database. Not used */
    private boolean add_to_database;
    /** Epoch format; UTCGregorian (UTC)      UTCModJulian  (MJD_2000) */
    private java.lang.String epoch_format;
    /** Start time of time period. Format: YYYY-MM-DDTHH:mm:SS.SSSZ */
    private java.lang.String start_time;
    /** Stop time of time period. Format: YYYY-MM-DDTHH:mm:SS.SSSZ */
    private java.lang.String stop_time;
    /** Step size in seconds */
    private int step_size;
    /** x, y, z */
    private java.util.List<java.lang.Double> initial_position;
    /** vx, vy, vz */
    private java.util.List<java.lang.Double> initial_velocity;
    private com.incomplete.cubegs.common.avro.messages.Tle Sgp4Input;
    private com.incomplete.cubegs.common.avro.messages.Tle.Builder Sgp4InputBuilder;
    private com.incomplete.cubegs.common.avro.messages.Sgp4Output output;
    private com.incomplete.cubegs.common.avro.messages.Sgp4Output.Builder outputBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.header)) {
        this.header = data().deepCopy(fields()[0].schema(), other.header);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasHeaderBuilder()) {
        this.headerBuilder = com.incomplete.cubegs.common.avro.messages.MsgHeader.newBuilder(other.getHeaderBuilder());
      }
      if (isValidValue(fields()[1], other.mission_id)) {
        this.mission_id = data().deepCopy(fields()[1].schema(), other.mission_id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.satellite_id)) {
        this.satellite_id = data().deepCopy(fields()[2].schema(), other.satellite_id);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.add_to_database)) {
        this.add_to_database = data().deepCopy(fields()[3].schema(), other.add_to_database);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.epoch_format)) {
        this.epoch_format = data().deepCopy(fields()[4].schema(), other.epoch_format);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.start_time)) {
        this.start_time = data().deepCopy(fields()[5].schema(), other.start_time);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.stop_time)) {
        this.stop_time = data().deepCopy(fields()[6].schema(), other.stop_time);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.step_size)) {
        this.step_size = data().deepCopy(fields()[7].schema(), other.step_size);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.initial_position)) {
        this.initial_position = data().deepCopy(fields()[8].schema(), other.initial_position);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.initial_velocity)) {
        this.initial_velocity = data().deepCopy(fields()[9].schema(), other.initial_velocity);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.Sgp4Input)) {
        this.Sgp4Input = data().deepCopy(fields()[10].schema(), other.Sgp4Input);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (other.hasSgp4InputBuilder()) {
        this.Sgp4InputBuilder = com.incomplete.cubegs.common.avro.messages.Tle.newBuilder(other.getSgp4InputBuilder());
      }
      if (isValidValue(fields()[11], other.output)) {
        this.output = data().deepCopy(fields()[11].schema(), other.output);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (other.hasOutputBuilder()) {
        this.outputBuilder = com.incomplete.cubegs.common.avro.messages.Sgp4Output.newBuilder(other.getOutputBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing MsgPropagateSGP4 instance
     * @param other The existing instance to copy.
     */
    private Builder(com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.header)) {
        this.header = data().deepCopy(fields()[0].schema(), other.header);
        fieldSetFlags()[0] = true;
      }
      this.headerBuilder = null;
      if (isValidValue(fields()[1], other.mission_id)) {
        this.mission_id = data().deepCopy(fields()[1].schema(), other.mission_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.satellite_id)) {
        this.satellite_id = data().deepCopy(fields()[2].schema(), other.satellite_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.add_to_database)) {
        this.add_to_database = data().deepCopy(fields()[3].schema(), other.add_to_database);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.epoch_format)) {
        this.epoch_format = data().deepCopy(fields()[4].schema(), other.epoch_format);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.start_time)) {
        this.start_time = data().deepCopy(fields()[5].schema(), other.start_time);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.stop_time)) {
        this.stop_time = data().deepCopy(fields()[6].schema(), other.stop_time);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.step_size)) {
        this.step_size = data().deepCopy(fields()[7].schema(), other.step_size);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.initial_position)) {
        this.initial_position = data().deepCopy(fields()[8].schema(), other.initial_position);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.initial_velocity)) {
        this.initial_velocity = data().deepCopy(fields()[9].schema(), other.initial_velocity);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.Sgp4Input)) {
        this.Sgp4Input = data().deepCopy(fields()[10].schema(), other.Sgp4Input);
        fieldSetFlags()[10] = true;
      }
      this.Sgp4InputBuilder = null;
      if (isValidValue(fields()[11], other.output)) {
        this.output = data().deepCopy(fields()[11].schema(), other.output);
        fieldSetFlags()[11] = true;
      }
      this.outputBuilder = null;
    }

    /**
      * Gets the value of the 'header' field.
      * Common messages header
      * @return The value.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgHeader getHeader() {
      return header;
    }


    /**
      * Sets the value of the 'header' field.
      * Common messages header
      * @param value The value of 'header'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder setHeader(com.incomplete.cubegs.common.avro.messages.MsgHeader value) {
      validate(fields()[0], value);
      this.headerBuilder = null;
      this.header = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'header' field has been set.
      * Common messages header
      * @return True if the 'header' field has been set, false otherwise.
      */
    public boolean hasHeader() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'header' field and creates one if it doesn't exist yet.
     * Common messages header
     * @return This builder.
     */
    public com.incomplete.cubegs.common.avro.messages.MsgHeader.Builder getHeaderBuilder() {
      if (headerBuilder == null) {
        if (hasHeader()) {
          setHeaderBuilder(com.incomplete.cubegs.common.avro.messages.MsgHeader.newBuilder(header));
        } else {
          setHeaderBuilder(com.incomplete.cubegs.common.avro.messages.MsgHeader.newBuilder());
        }
      }
      return headerBuilder;
    }

    /**
     * Sets the Builder instance for the 'header' field
     * Common messages header
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder setHeaderBuilder(com.incomplete.cubegs.common.avro.messages.MsgHeader.Builder value) {
      clearHeader();
      headerBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'header' field has an active Builder instance
     * Common messages header
     * @return True if the 'header' field has an active Builder instance
     */
    public boolean hasHeaderBuilder() {
      return headerBuilder != null;
    }

    /**
      * Clears the value of the 'header' field.
      * Common messages header
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder clearHeader() {
      header = null;
      headerBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'mission_id' field.
      * Unique mission identifier
      * @return The value.
      */
    public java.lang.String getMissionId() {
      return mission_id;
    }


    /**
      * Sets the value of the 'mission_id' field.
      * Unique mission identifier
      * @param value The value of 'mission_id'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder setMissionId(java.lang.String value) {
      validate(fields()[1], value);
      this.mission_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'mission_id' field has been set.
      * Unique mission identifier
      * @return True if the 'mission_id' field has been set, false otherwise.
      */
    public boolean hasMissionId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'mission_id' field.
      * Unique mission identifier
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder clearMissionId() {
      mission_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'satellite_id' field.
      * Unique satellite identifier
      * @return The value.
      */
    public java.lang.String getSatelliteId() {
      return satellite_id;
    }


    /**
      * Sets the value of the 'satellite_id' field.
      * Unique satellite identifier
      * @param value The value of 'satellite_id'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder setSatelliteId(java.lang.String value) {
      validate(fields()[2], value);
      this.satellite_id = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'satellite_id' field has been set.
      * Unique satellite identifier
      * @return True if the 'satellite_id' field has been set, false otherwise.
      */
    public boolean hasSatelliteId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'satellite_id' field.
      * Unique satellite identifier
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder clearSatelliteId() {
      satellite_id = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'add_to_database' field.
      * Add output to the mission database. Not used
      * @return The value.
      */
    public boolean getAddToDatabase() {
      return add_to_database;
    }


    /**
      * Sets the value of the 'add_to_database' field.
      * Add output to the mission database. Not used
      * @param value The value of 'add_to_database'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder setAddToDatabase(boolean value) {
      validate(fields()[3], value);
      this.add_to_database = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'add_to_database' field has been set.
      * Add output to the mission database. Not used
      * @return True if the 'add_to_database' field has been set, false otherwise.
      */
    public boolean hasAddToDatabase() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'add_to_database' field.
      * Add output to the mission database. Not used
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder clearAddToDatabase() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'epoch_format' field.
      * Epoch format; UTCGregorian (UTC)      UTCModJulian  (MJD_2000)
      * @return The value.
      */
    public java.lang.String getEpochFormat() {
      return epoch_format;
    }


    /**
      * Sets the value of the 'epoch_format' field.
      * Epoch format; UTCGregorian (UTC)      UTCModJulian  (MJD_2000)
      * @param value The value of 'epoch_format'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder setEpochFormat(java.lang.String value) {
      validate(fields()[4], value);
      this.epoch_format = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'epoch_format' field has been set.
      * Epoch format; UTCGregorian (UTC)      UTCModJulian  (MJD_2000)
      * @return True if the 'epoch_format' field has been set, false otherwise.
      */
    public boolean hasEpochFormat() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'epoch_format' field.
      * Epoch format; UTCGregorian (UTC)      UTCModJulian  (MJD_2000)
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder clearEpochFormat() {
      epoch_format = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'start_time' field.
      * Start time of time period. Format: YYYY-MM-DDTHH:mm:SS.SSSZ
      * @return The value.
      */
    public java.lang.String getStartTime() {
      return start_time;
    }


    /**
      * Sets the value of the 'start_time' field.
      * Start time of time period. Format: YYYY-MM-DDTHH:mm:SS.SSSZ
      * @param value The value of 'start_time'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder setStartTime(java.lang.String value) {
      validate(fields()[5], value);
      this.start_time = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'start_time' field has been set.
      * Start time of time period. Format: YYYY-MM-DDTHH:mm:SS.SSSZ
      * @return True if the 'start_time' field has been set, false otherwise.
      */
    public boolean hasStartTime() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'start_time' field.
      * Start time of time period. Format: YYYY-MM-DDTHH:mm:SS.SSSZ
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder clearStartTime() {
      start_time = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'stop_time' field.
      * Stop time of time period. Format: YYYY-MM-DDTHH:mm:SS.SSSZ
      * @return The value.
      */
    public java.lang.String getStopTime() {
      return stop_time;
    }


    /**
      * Sets the value of the 'stop_time' field.
      * Stop time of time period. Format: YYYY-MM-DDTHH:mm:SS.SSSZ
      * @param value The value of 'stop_time'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder setStopTime(java.lang.String value) {
      validate(fields()[6], value);
      this.stop_time = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'stop_time' field has been set.
      * Stop time of time period. Format: YYYY-MM-DDTHH:mm:SS.SSSZ
      * @return True if the 'stop_time' field has been set, false otherwise.
      */
    public boolean hasStopTime() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'stop_time' field.
      * Stop time of time period. Format: YYYY-MM-DDTHH:mm:SS.SSSZ
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder clearStopTime() {
      stop_time = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'step_size' field.
      * Step size in seconds
      * @return The value.
      */
    public int getStepSize() {
      return step_size;
    }


    /**
      * Sets the value of the 'step_size' field.
      * Step size in seconds
      * @param value The value of 'step_size'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder setStepSize(int value) {
      validate(fields()[7], value);
      this.step_size = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'step_size' field has been set.
      * Step size in seconds
      * @return True if the 'step_size' field has been set, false otherwise.
      */
    public boolean hasStepSize() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'step_size' field.
      * Step size in seconds
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder clearStepSize() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'initial_position' field.
      * x, y, z
      * @return The value.
      */
    public java.util.List<java.lang.Double> getInitialPosition() {
      return initial_position;
    }


    /**
      * Sets the value of the 'initial_position' field.
      * x, y, z
      * @param value The value of 'initial_position'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder setInitialPosition(java.util.List<java.lang.Double> value) {
      validate(fields()[8], value);
      this.initial_position = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'initial_position' field has been set.
      * x, y, z
      * @return True if the 'initial_position' field has been set, false otherwise.
      */
    public boolean hasInitialPosition() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'initial_position' field.
      * x, y, z
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder clearInitialPosition() {
      initial_position = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'initial_velocity' field.
      * vx, vy, vz
      * @return The value.
      */
    public java.util.List<java.lang.Double> getInitialVelocity() {
      return initial_velocity;
    }


    /**
      * Sets the value of the 'initial_velocity' field.
      * vx, vy, vz
      * @param value The value of 'initial_velocity'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder setInitialVelocity(java.util.List<java.lang.Double> value) {
      validate(fields()[9], value);
      this.initial_velocity = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'initial_velocity' field has been set.
      * vx, vy, vz
      * @return True if the 'initial_velocity' field has been set, false otherwise.
      */
    public boolean hasInitialVelocity() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'initial_velocity' field.
      * vx, vy, vz
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder clearInitialVelocity() {
      initial_velocity = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'Sgp4Input' field.
      * @return The value.
      */
    public com.incomplete.cubegs.common.avro.messages.Tle getSgp4Input() {
      return Sgp4Input;
    }


    /**
      * Sets the value of the 'Sgp4Input' field.
      * @param value The value of 'Sgp4Input'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder setSgp4Input(com.incomplete.cubegs.common.avro.messages.Tle value) {
      validate(fields()[10], value);
      this.Sgp4InputBuilder = null;
      this.Sgp4Input = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'Sgp4Input' field has been set.
      * @return True if the 'Sgp4Input' field has been set, false otherwise.
      */
    public boolean hasSgp4Input() {
      return fieldSetFlags()[10];
    }

    /**
     * Gets the Builder instance for the 'Sgp4Input' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.incomplete.cubegs.common.avro.messages.Tle.Builder getSgp4InputBuilder() {
      if (Sgp4InputBuilder == null) {
        if (hasSgp4Input()) {
          setSgp4InputBuilder(com.incomplete.cubegs.common.avro.messages.Tle.newBuilder(Sgp4Input));
        } else {
          setSgp4InputBuilder(com.incomplete.cubegs.common.avro.messages.Tle.newBuilder());
        }
      }
      return Sgp4InputBuilder;
    }

    /**
     * Sets the Builder instance for the 'Sgp4Input' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder setSgp4InputBuilder(com.incomplete.cubegs.common.avro.messages.Tle.Builder value) {
      clearSgp4Input();
      Sgp4InputBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'Sgp4Input' field has an active Builder instance
     * @return True if the 'Sgp4Input' field has an active Builder instance
     */
    public boolean hasSgp4InputBuilder() {
      return Sgp4InputBuilder != null;
    }

    /**
      * Clears the value of the 'Sgp4Input' field.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder clearSgp4Input() {
      Sgp4Input = null;
      Sgp4InputBuilder = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'output' field.
      * @return The value.
      */
    public com.incomplete.cubegs.common.avro.messages.Sgp4Output getOutput() {
      return output;
    }


    /**
      * Sets the value of the 'output' field.
      * @param value The value of 'output'.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder setOutput(com.incomplete.cubegs.common.avro.messages.Sgp4Output value) {
      validate(fields()[11], value);
      this.outputBuilder = null;
      this.output = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'output' field has been set.
      * @return True if the 'output' field has been set, false otherwise.
      */
    public boolean hasOutput() {
      return fieldSetFlags()[11];
    }

    /**
     * Gets the Builder instance for the 'output' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.incomplete.cubegs.common.avro.messages.Sgp4Output.Builder getOutputBuilder() {
      if (outputBuilder == null) {
        if (hasOutput()) {
          setOutputBuilder(com.incomplete.cubegs.common.avro.messages.Sgp4Output.newBuilder(output));
        } else {
          setOutputBuilder(com.incomplete.cubegs.common.avro.messages.Sgp4Output.newBuilder());
        }
      }
      return outputBuilder;
    }

    /**
     * Sets the Builder instance for the 'output' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder setOutputBuilder(com.incomplete.cubegs.common.avro.messages.Sgp4Output.Builder value) {
      clearOutput();
      outputBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'output' field has an active Builder instance
     * @return True if the 'output' field has an active Builder instance
     */
    public boolean hasOutputBuilder() {
      return outputBuilder != null;
    }

    /**
      * Clears the value of the 'output' field.
      * @return This builder.
      */
    public com.incomplete.cubegs.common.avro.messages.MsgPropagateSGP4.Builder clearOutput() {
      output = null;
      outputBuilder = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MsgPropagateSGP4 build() {
      try {
        MsgPropagateSGP4 record = new MsgPropagateSGP4();
        if (headerBuilder != null) {
          try {
            record.header = this.headerBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("header"));
            throw e;
          }
        } else {
          record.header = fieldSetFlags()[0] ? this.header : (com.incomplete.cubegs.common.avro.messages.MsgHeader) defaultValue(fields()[0]);
        }
        record.mission_id = fieldSetFlags()[1] ? this.mission_id : (java.lang.String) defaultValue(fields()[1]);
        record.satellite_id = fieldSetFlags()[2] ? this.satellite_id : (java.lang.String) defaultValue(fields()[2]);
        record.add_to_database = fieldSetFlags()[3] ? this.add_to_database : (java.lang.Boolean) defaultValue(fields()[3]);
        record.epoch_format = fieldSetFlags()[4] ? this.epoch_format : (java.lang.String) defaultValue(fields()[4]);
        record.start_time = fieldSetFlags()[5] ? this.start_time : (java.lang.String) defaultValue(fields()[5]);
        record.stop_time = fieldSetFlags()[6] ? this.stop_time : (java.lang.String) defaultValue(fields()[6]);
        record.step_size = fieldSetFlags()[7] ? this.step_size : (java.lang.Integer) defaultValue(fields()[7]);
        record.initial_position = fieldSetFlags()[8] ? this.initial_position : (java.util.List<java.lang.Double>) defaultValue(fields()[8]);
        record.initial_velocity = fieldSetFlags()[9] ? this.initial_velocity : (java.util.List<java.lang.Double>) defaultValue(fields()[9]);
        if (Sgp4InputBuilder != null) {
          try {
            record.Sgp4Input = this.Sgp4InputBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("Sgp4Input"));
            throw e;
          }
        } else {
          record.Sgp4Input = fieldSetFlags()[10] ? this.Sgp4Input : (com.incomplete.cubegs.common.avro.messages.Tle) defaultValue(fields()[10]);
        }
        if (outputBuilder != null) {
          try {
            record.output = this.outputBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("output"));
            throw e;
          }
        } else {
          record.output = fieldSetFlags()[11] ? this.output : (com.incomplete.cubegs.common.avro.messages.Sgp4Output) defaultValue(fields()[11]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MsgPropagateSGP4>
    WRITER$ = (org.apache.avro.io.DatumWriter<MsgPropagateSGP4>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MsgPropagateSGP4>
    READER$ = (org.apache.avro.io.DatumReader<MsgPropagateSGP4>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    this.header.customEncode(out);

    out.writeString(this.mission_id);

    out.writeString(this.satellite_id);

    out.writeBoolean(this.add_to_database);

    out.writeString(this.epoch_format);

    out.writeString(this.start_time);

    out.writeString(this.stop_time);

    out.writeInt(this.step_size);

    long size0 = this.initial_position.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (java.lang.Double e0: this.initial_position) {
      actualSize0++;
      out.startItem();
      out.writeDouble(e0);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    long size1 = this.initial_velocity.size();
    out.writeArrayStart();
    out.setItemCount(size1);
    long actualSize1 = 0;
    for (java.lang.Double e1: this.initial_velocity) {
      actualSize1++;
      out.startItem();
      out.writeDouble(e1);
    }
    out.writeArrayEnd();
    if (actualSize1 != size1)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");

    this.Sgp4Input.customEncode(out);

    this.output.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (this.header == null) {
        this.header = new com.incomplete.cubegs.common.avro.messages.MsgHeader();
      }
      this.header.customDecode(in);

      this.mission_id = in.readString();

      this.satellite_id = in.readString();

      this.add_to_database = in.readBoolean();

      this.epoch_format = in.readString();

      this.start_time = in.readString();

      this.stop_time = in.readString();

      this.step_size = in.readInt();

      long size0 = in.readArrayStart();
      java.util.List<java.lang.Double> a0 = this.initial_position;
      if (a0 == null) {
        a0 = new SpecificData.Array<java.lang.Double>((int)size0, SCHEMA$.getField("initial_position").schema());
        this.initial_position = a0;
      } else a0.clear();
      SpecificData.Array<java.lang.Double> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Double>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          java.lang.Double e0 = (ga0 != null ? ga0.peek() : null);
          e0 = in.readDouble();
          a0.add(e0);
        }
      }

      long size1 = in.readArrayStart();
      java.util.List<java.lang.Double> a1 = this.initial_velocity;
      if (a1 == null) {
        a1 = new SpecificData.Array<java.lang.Double>((int)size1, SCHEMA$.getField("initial_velocity").schema());
        this.initial_velocity = a1;
      } else a1.clear();
      SpecificData.Array<java.lang.Double> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Double>)a1 : null);
      for ( ; 0 < size1; size1 = in.arrayNext()) {
        for ( ; size1 != 0; size1--) {
          java.lang.Double e1 = (ga1 != null ? ga1.peek() : null);
          e1 = in.readDouble();
          a1.add(e1);
        }
      }

      if (this.Sgp4Input == null) {
        this.Sgp4Input = new com.incomplete.cubegs.common.avro.messages.Tle();
      }
      this.Sgp4Input.customDecode(in);

      if (this.output == null) {
        this.output = new com.incomplete.cubegs.common.avro.messages.Sgp4Output();
      }
      this.output.customDecode(in);

    } else {
      for (int i = 0; i < 12; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (this.header == null) {
            this.header = new com.incomplete.cubegs.common.avro.messages.MsgHeader();
          }
          this.header.customDecode(in);
          break;

        case 1:
          this.mission_id = in.readString();
          break;

        case 2:
          this.satellite_id = in.readString();
          break;

        case 3:
          this.add_to_database = in.readBoolean();
          break;

        case 4:
          this.epoch_format = in.readString();
          break;

        case 5:
          this.start_time = in.readString();
          break;

        case 6:
          this.stop_time = in.readString();
          break;

        case 7:
          this.step_size = in.readInt();
          break;

        case 8:
          long size0 = in.readArrayStart();
          java.util.List<java.lang.Double> a0 = this.initial_position;
          if (a0 == null) {
            a0 = new SpecificData.Array<java.lang.Double>((int)size0, SCHEMA$.getField("initial_position").schema());
            this.initial_position = a0;
          } else a0.clear();
          SpecificData.Array<java.lang.Double> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Double>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              java.lang.Double e0 = (ga0 != null ? ga0.peek() : null);
              e0 = in.readDouble();
              a0.add(e0);
            }
          }
          break;

        case 9:
          long size1 = in.readArrayStart();
          java.util.List<java.lang.Double> a1 = this.initial_velocity;
          if (a1 == null) {
            a1 = new SpecificData.Array<java.lang.Double>((int)size1, SCHEMA$.getField("initial_velocity").schema());
            this.initial_velocity = a1;
          } else a1.clear();
          SpecificData.Array<java.lang.Double> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Double>)a1 : null);
          for ( ; 0 < size1; size1 = in.arrayNext()) {
            for ( ; size1 != 0; size1--) {
              java.lang.Double e1 = (ga1 != null ? ga1.peek() : null);
              e1 = in.readDouble();
              a1.add(e1);
            }
          }
          break;

        case 10:
          if (this.Sgp4Input == null) {
            this.Sgp4Input = new com.incomplete.cubegs.common.avro.messages.Tle();
          }
          this.Sgp4Input.customDecode(in);
          break;

        case 11:
          if (this.output == null) {
            this.output = new com.incomplete.cubegs.common.avro.messages.Sgp4Output();
          }
          this.output.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










